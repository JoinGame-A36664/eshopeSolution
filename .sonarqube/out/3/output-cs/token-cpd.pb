 
nF:\C#\Website\BackEnd\hocDuAnWEB\eShopSolution\eShopSolution.Application\Catalog\Categories\CategoryService.cs
	namespace 	
eShopSolution
 
. 
Application #
.# $
Catalog$ +
.+ ,

Categories, 6
{ 
public 

class 
CategoryService  
:! "
ICategoryService# 3
{ 
private 
readonly 
EShopDbContext '
_context( 0
;0 1
public 
CategoryService 
( 
EShopDbContext -
context. 5
)5 6
{ 	
_context 
= 
context 
; 
} 	
public 
async 
Task 
< 
	ApiResult #
<# $
List$ (
<( )

CategoryVm) 3
>3 4
>4 5
>5 6
GetAll7 =
(= >
string> D

languageIdE O
)O P
{ 	
var 
query 
= 
from 
c 
in !
_context" *
.* +

Categories+ 5
join 
ct 
in  "
_context# +
.+ , 
CategoryTranslations, @
onA C
cD E
.E F
IdF H
equalsI O
ctP R
.R S

CategoryIdS ]
where 
ct  
.  !

LanguageId! +
==, .

languageId/ 9
select 
new "
{# $
c% &
,& '
ct( *
}+ ,
;, -
var 

categories 
= 
await "
query# (
.( )
Select) /
(/ 0
x0 1
=>2 4
new5 8

CategoryVm9 C
{ 
Id 
= 
x 
. 
c 
. 
Id 
, 
Name   
=   
x   
.   
ct   
.   
Name    
,    !
ParentId!! 
=!! 
x!! 
.!! 
c!! 
.!! 
ParentId!! '
}"" 
)"" 
."" 
ToListAsync"" 
("" 
)"" 
;"" 
var$$ 
data$$ 
=$$ 
new$$ 
	ApiResult$$ $
<$$$ %
List$$% )
<$$) *

CategoryVm$$* 4
>$$4 5
>$$5 6
($$6 7
)$$7 8
{%% 
IsSuccessed&& 
=&& 
true&& "
,&&" #
Message'' 
='' 
$str'' 
,'' 
	ResultObj(( 
=(( 

categories(( &
})) 
;)) 
return** 
data** 
;** 
}++ 	
},, 
}-- √
oF:\C#\Website\BackEnd\hocDuAnWEB\eShopSolution\eShopSolution.Application\Catalog\Categories\ICategoryService.cs
	namespace 	
eShopSolution
 
. 
Application #
.# $
Catalog$ +
.+ ,

Categories, 6
{		 
public

 

	interface

 
ICategoryService

 %
{ 
public 
Task 
< 
	ApiResult 
< 
List "
<" #

CategoryVm# -
>- .
>. /
>/ 0
GetAll1 7
(7 8
string8 >

languageId? I
)I J
;J K
} 
} ¿
hF:\C#\Website\BackEnd\hocDuAnWEB\eShopSolution\eShopSolution.Application\Catalog\Orders\IOrderService.cs
	namespace 	
eShopSolution
 
. 
Application #
.# $
Catalog$ +
.+ ,
Orders, 2
{ 
public		 
	interface			 
IOrderService		  
{

 
Task 
< 
int 
> 
CreateOrder 
( 
CheckoutRequest -
request. 5
)5 6
;6 7
} 
} ﬂ
gF:\C#\Website\BackEnd\hocDuAnWEB\eShopSolution\eShopSolution.Application\Catalog\Orders\OrderService.cs
	namespace

 	
eShopSolution


 
.

 
Application

 #
.

# $
Catalog

$ +
.

+ ,
Orders

, 2
{ 
public 

class 
OrderService 
: 
IOrderService  -
{ 
private 
readonly 
EShopDbContext '
_context( 0
;0 1
public 
OrderService 
( 
EShopDbContext *
context+ 2
)2 3
{ 	
_context 
= 
context 
; 
} 	
public 
async 
Task 
< 
int 
> 
CreateOrder *
(* +
CheckoutRequest+ :
request; B
)B C
{ 	
var 
user 
= 
_context 
.  
Users  %
.% &
Where& +
(+ ,
x, -
=>. 0
x1 2
.2 3
UserName3 ;
==< >
request? F
.F G
UserNameG O
)O P
.P Q
FirstOrDefaultQ _
(_ `
)` a
;a b
var 
order 
= 
new 
Order !
(! "
)" #
{ 
	OrderDate!! 
=!! 
DateTime!! $
.!!$ %
Now!!% (
,!!( )
ShipAddress"" 
="" 
request"" %
.""% &
Address""& -
,""- .
	ShipEmail## 
=## 
request## #
.### $
Email##$ )
,##) *
ShipName$$ 
=$$ 
request$$ "
.$$" #
Name$$# '
,$$' (
ShipPhoneNumber%% 
=%%  !
request%%" )
.%%) *
PhoneNumber%%* 5
,%%5 6
UserId&& 
=&& 
user&& 
.&& 
Id&& 
,&&  
OrderDetails'' 
='' 
ListOrderdetails'' /
(''/ 0
request''0 7
.''7 8
OrderDetails''8 D
)''D E
})) 
;)) 
_context,, 
.,, 
Orders,, 
.,,  
Add,,  #
(,,# $
order,,$ )
),,) *
;,,* +
var.. 
item.. 
=.. 
await.. 
_context.. $
...$ %
SaveChangesAsync..% 5
(..5 6
)..6 7
;..7 8
return00 
item00 
;00 
}22 	
private55 
List55 
<55 
OrderDetail55  
>55  !
ListOrderdetails55" 2
(552 3
List553 7
<557 8
OrderDetailVm558 E
>55E F
orderDetailVms55G U
)55U V
{66 	
List77 
<77 
OrderDetail77 
>77 
list77 "
=77# $
new77% (
List77) -
<77- .
OrderDetail77. 9
>779 :
(77: ;
)77; <
;77< =
foreach88 
(88 
var88 
item88 
in88 
orderDetailVms88  .
)88. /
{99 
list:: 
.:: 
Add:: 
(:: 
new:: 
OrderDetail:: (
(::( )
)::) *
{;; 
	ProductId<< 
=<< 
item<<  $
.<<$ %
	ProductId<<% .
,<<. /
Quantity== 
=== 
item== #
.==# $
Quantity==$ ,
,==, -
}>> 
)>> 
;>> 
}@@ 
returnBB 
listBB 
;BB 
}CC 	
}DD 
}EE ù&
lF:\C#\Website\BackEnd\hocDuAnWEB\eShopSolution\eShopSolution.Application\Catalog\Products\IProductService.cs
	namespace 	
eShopSolution
 
. 
Application #
.# $
Catalog$ +
.+ ,
Products, 4
{		 
public 

	interface 
IProductService $
{ 
Task 
< 
int 
> 
Create 
(  
ProductCreateRequest -
request. 5
)5 6
;6 7
Task 
< 
int 
> 
Update 
(  
ProductUpdateRequest -
request. 5
)5 6
;6 7
Task 
< 
bool 
> 
UpdatePrice 
( 
int "
	ProductId# ,
,, -
decimal. 5
newPrice6 >
)> ?
;? @
Task 
< 
bool 
> 
UpdateStock 
( 
int "
	ProductId# ,
,, -
int. 1
addedQuantity2 ?
)? @
;@ A
Task 
AddViewCount 
( 
int 
	ProductId '
)' (
;( )
Task 
< 
int 
> 
Delete 
( 
int 
	ProductId &
)& '
;' (
Task 
< 
	ProductVm 
> 
GetById 
(  
int  #
	productId$ -
,- .
string/ 5

languageId6 @
)@ A
;A B
Task 
< 
	ApiResult 
< 
PagedResult "
<" #
	ProductVm# ,
>, -
>- .
>. /
GetAllPaging0 <
(< =)
GetManageProductPagingRequest= Z
request[ b
)b c
;c d
Task   
<   
int   
>   
AddImage   
(   %
ProductImageCreateRequest   4
request  5 <
)  < =
;  = >
Task"" 
<"" 
int"" 
>"" 
RemoveImage"" 
("" 
int"" !
imageId""" )
)"") *
;""* +
Task$$ 
<$$ 
int$$ 
>$$ 
UpDateImage$$ 
($$ 
int$$ !
imageId$$" )
,$$) *%
ProductImageUpdateRequest$$+ D
request$$E L
)$$L M
;$$M N
Task&& 
<&& 
ProductImageVm&& 
>&& 
GetImageById&& )
(&&) *
int&&* -
imageId&&. 5
)&&5 6
;&&6 7
Task(( 
<(( 
List(( 
<(( 
ProductImageVm((  
>((  !
>((! "
GetListImages((# 0
(((0 1
int((1 4
	productId((5 >
)((> ?
;((? @
Task** 
<** 
PagedResult** 
<** 
	ProductVm** "
>**" #
>**# $
GetAllByCategoryId**% 7
(**7 8
string**8 >

languageId**? I
,**I J)
GetPublicProductPagingRequest**K h
request**i p
)**p q
;**q r
Task,, 
<,, 
	ApiResult,, 
<,, 
bool,, 
>,, 
>,, 
CategoryAssign,, ,
(,,, -
int,,- 0
id,,1 3
,,,3 4!
CategoryAssignRequest,,5 J
request,,K R
),,R S
;,,S T
Task.. 
<.. 
List.. 
<.. 
	ProductVm.. 
>.. 
>.. 
GetFeaturedProducts.. 1
(..1 2
string..2 8
	langugeId..9 B
,..B C
int..D G
take..H L
)..L M
;..M N
Task00 
<00 
List00 
<00 
	ProductVm00 
>00 
>00 
GetLatestProducts00 /
(00/ 0
string000 6
	langugeId007 @
,00@ A
int00B E
take00F J
)00J K
;00K L
Task22 
<22 
List22 
<22 
	ProductVm22 
>22 
>22 
GetRelatedProducts22 0
(220 1
int221 4
	productId225 >
,22> ?
string22@ F
	langugeId22G P
,22P Q
int22R U
take22V Z
)22Z [
;22[ \
Task44 
<44 
List44 
<44 
string44 
>44 
>44 
GetImagePaths44 (
(44( )
int44) ,
	productId44- 6
)446 7
;447 8
}55 
}66 Ï±
kF:\C#\Website\BackEnd\hocDuAnWEB\eShopSolution\eShopSolution.Application\Catalog\Products\ProductService.cs
	namespace 	
eShopSolution
 
. 
Application #
.# $
Catalog$ +
.+ ,
Products, 4
{ 
public 

class 
ProductService 
:  !
IProductService" 1
{ 
private 
readonly 
EShopDbContext '
_context( 0
;0 1
private 
readonly 
IStorageService (
_storageService) 8
;8 9
public 
ProductService 
( 
EShopDbContext ,
context- 4
,4 5
IStorageService6 E
storageServiceF T
)T U
{ 	
_context   
=   
context   
;   
_storageService## 
=## 
storageService## ,
;##, -
}$$ 	
public'' 
async'' 
Task'' 
AddViewCount'' &
(''& '
int''' *
	ProductId''+ 4
)''4 5
{(( 	
var)) 
Product)) 
=)) 
await)) 
_context))  (
.))( )
Products))) 1
.))1 2
	FindAsync))2 ;
()); <
	ProductId))< E
)))E F
;))F G
Product** 
.** 
	ViewCount** 
+=**  
$num**! "
;**" #
await++ 
_context++ 
.++ 
SaveChangesAsync++ +
(+++ ,
)++, -
;++- .
},, 	
public// 
async// 
Task// 
<// 
int// 
>// 
Create// %
(//% & 
ProductCreateRequest//& :
request//; B
)//B C
{00 	
var22 
product22 
=22 
new22 
Product22 %
(22% &
)22& '
{33 
Price55 
=55 
request55 
.55  
Price55  %
,55% &
OriginalPrice66 
=66 
request66  '
.66' (
OriginalPrice66( 5
,665 6
Stock77 
=77 
request77 
.77  
Stock77  %
,77% &
	ViewCount88 
=88 
$num88 
,88 
DateCreated99 
=99 
DateTime99 &
.99& '
Now99' *
,99* +
ProductTranslations<< #
=<<$ %
new<<& )
List<<* .
<<<. /
ProductTranslation<</ A
><<A B
(<<B C
)<<C D
{== 
new>> 
ProductTranslation>> *
(>>* +
)>>+ ,
{?? 
NameAA 
=AA 
requestAA $
.AA$ %
NameAA% )
,AA) *
DescriptionBB #
=BB# $
requestBB$ +
.BB+ ,
DescriptionBB, 7
,BB7 8
DetailsCC 
=CC  
requestCC  '
.CC' (
DetailsCC( /
,CC/ 0
SeoAliasDD  
=DD  !
requestDD! (
.DD( )
SeoAliasDD) 1
,DD1 2
SeoDescriptionEE &
=EE& '
requestEE' .
.EE. /
SeoDescriptionEE/ =
,EE= >
SeoTitleFF  
=FF  !
requestFF! (
.FF( )
SeoTitleFF) 1
,FF1 2

LanguageIdGG "
=GG" #
requestGG# *
.GG* +

LanguageIdGG+ 5
}HH 
}II 
}JJ 
;JJ 
ifMM 
(MM 
requestMM 
.MM 
ThumbnailImageMM &
!=MM' )
nullMM* .
)MM. /
{NN 
productOO 
.OO 
ProductImagesOO %
=OO& '
newOO( +
ListOO, 0
<OO0 1
ProductImageOO1 =
>OO= >
(OO> ?
)OO? @
{PP 
newQQ 
ProductImageQQ $
(QQ$ %
)QQ% &
{RR 
CaptionSS 
=SS  
$strSS  1
,SS1 2
DateCreatedTT #
=TT# $
DateTimeTT$ ,
.TT, -
NowTT- 0
,TT0 1
FileSizeUU  
=UU  !
requestUU! (
.UU( )
ThumbnailImageUU) 7
.UU7 8
LengthUU8 >
,UU> ?
	ImagePathVV !
=VV! "
awaitVV# (
thisVV) -
.VV- .
SaveFileVV. 6
(VV6 7
requestVV7 >
.VV> ?
ThumbnailImageVV? M
)VVM N
,VVN O
	IsdefaultWW !
=WW! "
trueWW" &
,WW& '
	SortOrderXX !
=XX! "
$numXX" #
}YY 
}ZZ 
;ZZ 
}[[ 
_context]] 
.]] 
Products]] 
.]] 
Add]] !
(]]! "
product]]" )
)]]) *
;]]* +
await`` 
_context`` 
.`` 
SaveChangesAsync`` +
(``+ ,
)``, -
;``- .
returnaa 
productaa 
.aa 
Idaa 
;aa 
}bb 	
publicee 
asyncee 
Taskee 
<ee 
intee 
>ee 
Deleteee %
(ee% &
intee& )
	ProductIdee* 3
)ee3 4
{ff 	
varkk 
Productkk 
=kk 
awaitkk 
_contextkk  (
.kk( )
Productskk) 1
.kk1 2
	FindAsynckk2 ;
(kk; <
	ProductIdkk< E
)kkE F
;kkF G
ifll 
(ll 
Productll 
==ll 
nullll 
)ll  
throwll! &
newll' *
EShopeExceptionll+ :
(ll: ;
$"ll; =
$strll= T
{llT U
	ProductIdllU ^
}ll^ _
"ll_ `
)ll` a
;lla b
varoo 
imagesoo 
=oo 
_contextoo !
.oo! "
ProductImagesoo" /
.oo/ 0
Whereoo0 5
(oo5 6
xoo6 7
=>oo8 :
xoo; <
.oo< =
	ProductIdoo= F
==ooG I
	ProductIdooJ S
)ooS T
;ooT U
foreachrr 
(rr 
varrr 
imagerr 
inrr !
imagesrr" (
)rr( )
{ss 
awaittt 
_storageServicett %
.tt% &
DeleteFileAsynctt& 5
(tt5 6
imagett6 ;
.tt; <
	ImagePathtt< E
)ttE F
;ttF G
}uu 
_contextxx 
.xx 
Productsxx 
.xx 
Removexx $
(xx$ %
Productxx% ,
)xx, -
;xx- .
returnzz 
awaitzz 
_contextzz !
.zz! "
SaveChangesAsynczz" 2
(zz2 3
)zz3 4
;zz4 5
}{{ 	
public~~ 
async~~ 
Task~~ 
<~~ 
	ApiResult~~ #
<~~# $
PagedResult~~$ /
<~~/ 0
	ProductVm~~0 9
>~~9 :
>~~: ;
>~~; <
GetAllPaging~~= I
(~~I J)
GetManageProductPagingRequest~~J g
request~~h o
)~~o p
{ 	
var
ÅÅ 
query
ÅÅ 
=
ÅÅ 
from
ÅÅ 
p
ÅÅ 
in
ÅÅ !
_context
ÅÅ" *
.
ÅÅ* +
Products
ÅÅ+ 3
join
ÇÇ 
pt
ÇÇ 
in
ÇÇ  "
_context
ÇÇ# +
.
ÇÇ+ ,!
ProductTranslations
ÇÇ, ?
on
ÇÇ@ B
p
ÇÇC D
.
ÇÇD E
Id
ÇÇE G
equals
ÇÇH N
pt
ÇÇO Q
.
ÇÇQ R
	ProductId
ÇÇR [
into
ÇÇ\ `
ppt
ÇÇa d
from
ÉÉ 
pt
ÉÉ 
in
ÉÉ  "
ppt
ÉÉ# &
.
ÉÉ& '
DefaultIfEmpty
ÉÉ' 5
(
ÉÉ5 6
)
ÉÉ6 7
join
ÑÑ 
pic
ÑÑ  
in
ÑÑ! #
_context
ÑÑ$ ,
.
ÑÑ, -!
ProductInCategories
ÑÑ- @
on
ÑÑA C
p
ÑÑD E
.
ÑÑE F
Id
ÑÑF H
equals
ÑÑI O
pic
ÑÑP S
.
ÑÑS T
	ProductId
ÑÑT ]
into
ÖÖ 
ppic
ÖÖ !
from
ÜÜ 
pic
ÜÜ  
in
ÜÜ! #
ppic
ÜÜ$ (
.
ÜÜ( )
DefaultIfEmpty
ÜÜ) 7
(
ÜÜ7 8
)
ÜÜ8 9
join
áá 
pi
áá 
in
áá  "
_context
áá# +
.
áá+ ,
ProductImages
áá, 9
on
áá: <
p
áá= >
.
áá> ?
Id
áá? A
equals
ááB H
pi
ááI K
.
ááK L
	ProductId
ááL U
into
ááV Z
ppi
áá[ ^
from
àà 
pi
àà 
in
àà  "
ppi
àà# &
.
àà& '
DefaultIfEmpty
àà' 5
(
àà5 6
)
àà6 7
join
ââ 
c
ââ 
in
ââ !
_context
ââ" *
.
ââ* +

Categories
ââ+ 5
on
ââ6 8
pic
ââ9 <
.
ââ< =

CategoryId
ââ= G
equals
ââH N
c
ââO P
.
ââP Q
Id
ââQ S
into
ää 
picc
ää !
from
ãã 
c
ãã 
in
ãã !
picc
ãã" &
.
ãã& '
DefaultIfEmpty
ãã' 5
(
ãã5 6
)
ãã6 7
where
åå 
pt
åå  
.
åå  !

LanguageId
åå! +
==
åå, .
request
åå/ 6
.
åå6 7

LanguageId
åå7 A
select
çç 
new
çç "
{
çç# $
p
çç% &
,
çç& '
pt
çç( *
,
çç* +
pic
çç, /
,
çç/ 0
pi
çç1 3
}
çç4 5
;
çç5 6
if
èè 
(
èè 
!
èè 
string
èè 
.
èè 
IsNullOrEmpty
èè %
(
èè% &
request
èè& -
.
èè- .
KeyWord
èè. 5
)
èè5 6
)
èè6 7
query
êê 
=
êê 
query
êê 
.
êê 
Where
êê #
(
êê# $
x
êê$ %
=>
êê& (
x
êê) *
.
êê* +
pt
êê+ -
.
êê- .
Name
êê. 2
.
êê2 3
Contains
êê3 ;
(
êê; <
request
êê< C
.
êêC D
KeyWord
êêD K
)
êêK L
)
êêL M
;
êêM N
if
ëë 
(
ëë 
request
ëë 
.
ëë 

CategoryId
ëë "
!=
ëë# %
null
ëë& *
&&
ëë+ -
request
ëë. 5
.
ëë5 6

CategoryId
ëë6 @
!=
ëëA C
$num
ëëD E
)
ëëE F
{
íí 
query
ìì 
=
ìì 
query
ìì 
.
ìì 
Where
ìì #
(
ìì# $
p
ìì$ %
=>
ìì& (
p
ìì) *
.
ìì* +
pic
ìì+ .
.
ìì. /

CategoryId
ìì/ 9
==
ìì: <
request
ìì= D
.
ììD E

CategoryId
ììE O
)
ììO P
;
ììP Q
}
îî 
int
ññ 
totalRow
ññ 
=
ññ 
await
ññ  
query
ññ! &
.
ññ& '

CountAsync
ññ' 1
(
ññ1 2
)
ññ2 3
;
ññ3 4
var
óó 
data
óó 
=
óó 
await
óó 
query
óó "
.
óó" #
Skip
óó# '
(
óó' (
(
óó( )
request
óó) 0
.
óó0 1
	PageIndex
óó1 :
-
óó; <
$num
óó= >
)
óó> ?
*
óó@ A
request
óóB I
.
óóI J
PageSize
óóJ R
)
óóR S
.
òò 
Take
òò 
(
òò 
request
òò 
.
òò 
PageSize
òò &
)
òò& '
.
ôô 
Select
ôô 
(
ôô 
x
ôô 
=>
ôô 
new
ôô  
	ProductVm
ôô! *
(
ôô* +
)
ôô+ ,
{
öö 
Id
õõ 
=
õõ 
x
õõ 
.
õõ 
p
õõ 
.
õõ 
Id
õõ 
,
õõ  
Name
úú 
=
úú 
x
úú 
.
úú 
pt
úú 
==
úú  "
null
úú# '
?
úú( )
SystemConstants
úú* 9
.
úú9 :
ProductConstants
úú: J
.
úúJ K
NA
úúK M
:
úúN O
x
úúP Q
.
úúQ R
pt
úúR T
.
úúT U
Name
úúU Y
,
úúY Z
DateCreated
ùù 
=
ùù  !
x
ùù" #
.
ùù# $
p
ùù$ %
.
ùù% &
DateCreated
ùù& 1
,
ùù1 2
Description
ûû 
=
ûû  !
x
ûû" #
.
ûû# $
pt
ûû$ &
==
ûû' )
null
ûû* .
?
ûû/ 0
SystemConstants
ûû1 @
.
ûû@ A
ProductConstants
ûûA Q
.
ûûQ R
NA
ûûR T
:
ûûU V
x
ûûW X
.
ûûX Y
pt
ûûY [
.
ûû[ \
Description
ûû\ g
,
ûûg h
Details
üü 
=
üü 
x
üü 
.
üü  
pt
üü  "
==
üü# %
null
üü& *
?
üü+ ,
SystemConstants
üü- <
.
üü< =
ProductConstants
üü= M
.
üüM N
NA
üüN P
:
üüQ R
x
üüS T
.
üüT U
pt
üüU W
.
üüW X
Details
üüX _
,
üü_ `

LanguageId
†† 
=
††  
x
††! "
.
††" #
pt
††# %
.
††% &

LanguageId
††& 0
,
††0 1
OriginalPrice
°° !
=
°°" #
x
°°$ %
.
°°% &
p
°°& '
.
°°' (
OriginalPrice
°°( 5
,
°°5 6
Price
¢¢ 
=
¢¢ 
x
¢¢ 
.
¢¢ 
p
¢¢ 
.
¢¢  
Price
¢¢  %
,
¢¢% &
SeoAlias
££ 
=
££ 
x
££  
.
££  !
pt
££! #
==
££$ &
null
££' +
?
££, -
SystemConstants
££. =
.
££= >
ProductConstants
££> N
.
££N O
NA
££O Q
:
££R S
x
££T U
.
££U V
pt
££V X
.
££X Y
SeoAlias
££Y a
,
££a b
SeoDescription
§§ "
=
§§# $
x
§§% &
.
§§& '
pt
§§' )
==
§§* ,
null
§§- 1
?
§§2 3
SystemConstants
§§4 C
.
§§C D
ProductConstants
§§D T
.
§§T U
NA
§§U W
:
§§X Y
x
§§Z [
.
§§[ \
pt
§§\ ^
.
§§^ _
SeoDescription
§§_ m
,
§§m n
SeoTitle
•• 
=
•• 
x
••  
.
••  !
pt
••! #
==
••$ &
null
••' +
?
••, -
SystemConstants
••. =
.
••= >
ProductConstants
••> N
.
••N O
NA
••O Q
:
••R S
x
••T U
.
••U V
pt
••V X
.
••X Y
SeoTitle
••Y a
,
••a b
Stock
¶¶ 
=
¶¶ 
x
¶¶ 
.
¶¶ 
p
¶¶ 
.
¶¶  
Stock
¶¶  %
,
¶¶% &
	ViewCount
ßß 
=
ßß 
x
ßß  !
.
ßß! "
p
ßß" #
.
ßß# $
	ViewCount
ßß$ -
,
ßß- .
ThumbnailImage
®® "
=
®®# $
x
®®% &
.
®®& '
pi
®®' )
.
®®) *
	ImagePath
®®* 3
}
©© 
)
©© 
.
©© 
ToListAsync
©© 
(
©© 
)
©©  
;
©©  !
var
´´ 
pagedResult
´´ 
=
´´ 
new
´´ !
PagedResult
´´" -
<
´´- .
	ProductVm
´´. 7
>
´´7 8
(
´´8 9
)
´´9 :
{
¨¨ 
TotalRecords
≠≠ 
=
≠≠ 
totalRow
≠≠ '
,
≠≠' (
PageSize
ÆÆ 
=
ÆÆ 
request
ÆÆ "
.
ÆÆ" #
PageSize
ÆÆ# +
,
ÆÆ+ ,
	PageIndex
ØØ 
=
ØØ 
request
ØØ #
.
ØØ# $
	PageIndex
ØØ$ -
,
ØØ- .
Items
∞∞ 
=
∞∞ 
data
∞∞ 
}
±± 
;
±± 
if
≥≥ 
(
≥≥ 
pagedResult
≥≥ 
!=
≥≥ 
null
≥≥ #
)
≥≥# $
{
¥¥ 
return
µµ 
new
µµ 
ApiSuccessResult
µµ +
<
µµ+ ,
PagedResult
µµ, 7
<
µµ7 8
	ProductVm
µµ8 A
>
µµA B
>
µµB C
(
µµC D
pagedResult
µµD O
)
µµO P
;
µµP Q
}
∂∂ 
return
∏∏ 
new
∏∏ 
ApiErrorResult
∏∏ %
<
∏∏% &
PagedResult
∏∏& 1
<
∏∏1 2
	ProductVm
∏∏2 ;
>
∏∏; <
>
∏∏< =
(
∏∏= >
)
∏∏> ?
;
∏∏? @
}
ππ 	
public
ªª 
async
ªª 
Task
ªª 
<
ªª 
	ProductVm
ªª #
>
ªª# $
GetById
ªª% ,
(
ªª, -
int
ªª- 0
	productId
ªª1 :
,
ªª: ;
string
ªª< B

languageId
ªªC M
)
ªªM N
{
ºº 	
var
ΩΩ 
product
ΩΩ 
=
ΩΩ 
await
ΩΩ 
_context
ΩΩ  (
.
ΩΩ( )
Products
ΩΩ) 1
.
ΩΩ1 2
	FindAsync
ΩΩ2 ;
(
ΩΩ; <
	productId
ΩΩ< E
)
ΩΩE F
;
ΩΩF G
var
ƒƒ  
productTranslation
ƒƒ "
=
ƒƒ# $
await
ƒƒ% *
_context
ƒƒ+ 3
.
ƒƒ3 4!
ProductTranslations
ƒƒ4 G
.
ƒƒG H!
FirstOrDefaultAsync
ƒƒH [
(
ƒƒ[ \
x
ƒƒ\ ]
=>
ƒƒ^ `
x
ƒƒa b
.
ƒƒb c
	ProductId
ƒƒc l
==
ƒƒm o
	productId
ƒƒp y
&&
≈≈ 
x
≈≈ 
.
≈≈ 

LanguageId
≈≈ 
==
≈≈ 

languageId
≈≈ )
)
≈≈) *
;
≈≈* +
var
«« 
image
«« 
=
«« 
await
«« 
_context
«« &
.
««& '
ProductImages
««' 4
.
««4 5
Where
««5 :
(
««: ;
x
««; <
=>
««= ?
x
««@ A
.
««A B
	ProductId
««B K
==
««L N
	productId
««O X
&&
««Y [
x
««\ ]
.
««] ^
	Isdefault
««^ g
==
««h j
true
««k o
)
««o p
.
««p q"
FirstOrDefaultAsync««q Ñ
(««Ñ Ö
)««Ö Ü
;««Ü á
var
   

categories
   
=
   
await
   "
(
  # $
from
  $ (
c
  ) *
in
  + -
_context
  . 6
.
  6 7

Categories
  7 A
join
ÀÀ$ (
ct
ÀÀ) +
in
ÀÀ, .
_context
ÀÀ/ 7
.
ÀÀ7 8"
CategoryTranslations
ÀÀ8 L
on
ÀÀM O
c
ÀÀP Q
.
ÀÀQ R
Id
ÀÀR T
equals
ÀÀU [
ct
ÀÀ\ ^
.
ÀÀ^ _

CategoryId
ÀÀ_ i
join
ÃÃ$ (
pic
ÃÃ) ,
in
ÃÃ- /
_context
ÃÃ0 8
.
ÃÃ8 9!
ProductInCategories
ÃÃ9 L
on
ÕÕ$ &
c
ÕÕ' (
.
ÕÕ( )
Id
ÕÕ) +
equals
ÕÕ, 2
pic
ÕÕ3 6
.
ÕÕ6 7

CategoryId
ÕÕ7 A
where
ŒŒ$ )
pic
ŒŒ* -
.
ŒŒ- .
	ProductId
ŒŒ. 7
==
ŒŒ8 :
	productId
ŒŒ; D
&&
ŒŒE G
ct
ŒŒH J
.
ŒŒJ K

LanguageId
ŒŒK U
==
ŒŒV X

languageId
ŒŒY c
select
œœ$ *
ct
œœ+ -
.
œœ- .
Name
œœ. 2
)
œœ2 3
.
œœ3 4
ToListAsync
œœ4 ?
(
œœ? @
)
œœ@ A
;
œœA B
var
–– 
productViewModel
––  
=
––! "
new
––# &
	ProductVm
––' 0
(
––0 1
)
––1 2
{
—— 
Id
”” 
=
”” 
product
”” 
.
”” 
Id
”” 
,
””  
DateCreated
‘‘ 
=
‘‘ 
product
‘‘ %
.
‘‘% &
DateCreated
‘‘& 1
,
‘‘1 2
Description
’’ 
=
’’  
productTranslation
’’ 0
!=
’’1 3
null
’’4 8
?
’’9 : 
productTranslation
’’; M
.
’’M N
Description
’’N Y
:
’’Z [
null
’’\ `
,
’’` a

LanguageId
÷÷ 
=
÷÷  
productTranslation
÷÷ /
.
÷÷/ 0

LanguageId
÷÷0 :
,
÷÷: ;
Details
◊◊ 
=
◊◊  
productTranslation
◊◊ ,
!=
◊◊- /
null
◊◊0 4
?
◊◊5 6 
productTranslation
◊◊7 I
.
◊◊I J
Details
◊◊J Q
:
◊◊R S
null
◊◊T X
,
◊◊X Y
Name
ÿÿ 
=
ÿÿ  
productTranslation
ÿÿ )
!=
ÿÿ* ,
null
ÿÿ- 1
?
ÿÿ2 3 
productTranslation
ÿÿ4 F
.
ÿÿF G
Name
ÿÿG K
:
ÿÿL M
null
ÿÿN R
,
ÿÿR S
OriginalPrice
ŸŸ 
=
ŸŸ 
product
ŸŸ  '
.
ŸŸ' (
OriginalPrice
ŸŸ( 5
,
ŸŸ5 6
Price
⁄⁄ 
=
⁄⁄ 
product
⁄⁄ 
.
⁄⁄  
Price
⁄⁄  %
,
⁄⁄% &
SeoAlias
€€ 
=
€€  
productTranslation
€€ -
!=
€€. 0
null
€€1 5
?
€€6 7 
productTranslation
€€8 J
.
€€J K
SeoAlias
€€K S
:
€€T U
null
€€V Z
,
€€Z [
SeoDescription
‹‹ 
=
‹‹   
productTranslation
‹‹! 3
!=
‹‹4 6
null
‹‹7 ;
?
‹‹< = 
productTranslation
‹‹> P
.
‹‹P Q
SeoDescription
‹‹Q _
:
‹‹` a
null
‹‹b f
,
‹‹f g
SeoTitle
›› 
=
››  
productTranslation
›› -
!=
››. 0
null
››1 5
?
››6 7 
productTranslation
››8 J
.
››J K
SeoTitle
››K S
:
››T U
null
››V Z
,
››Z [
Stock
ﬁﬁ 
=
ﬁﬁ 
product
ﬁﬁ 
.
ﬁﬁ  
Stock
ﬁﬁ  %
,
ﬁﬁ% &
	ViewCount
ﬂﬂ 
=
ﬂﬂ 
product
ﬂﬂ #
.
ﬂﬂ# $
	ViewCount
ﬂﬂ$ -
,
ﬂﬂ- .

Categories
‡‡ 
=
‡‡ 

categories
‡‡ '
,
‡‡' (

IsFeatured
·· 
=
·· 
product
·· $
.
··$ %

IsFeatured
··% /
,
··/ 0
ThumbnailImage
‚‚ 
=
‚‚  
image
‚‚! &
!=
‚‚' )
null
‚‚* .
?
‚‚/ 0
image
‚‚1 6
.
‚‚6 7
	ImagePath
‚‚7 @
:
‚‚A B
$str
‚‚C Q
}
„„ 
;
„„ 
return
‰‰ 
productViewModel
‰‰ #
;
‰‰# $
}
ÂÂ 	
public
ËË 
async
ËË 
Task
ËË 
<
ËË 
int
ËË 
>
ËË 
Update
ËË %
(
ËË% &"
ProductUpdateRequest
ËË& :
request
ËË; B
)
ËËB C
{
ÈÈ 	
var
ÎÎ 
product
ÎÎ 
=
ÎÎ 
await
ÎÎ 
_context
ÎÎ  (
.
ÎÎ( )
Products
ÎÎ) 1
.
ÎÎ1 2
	FindAsync
ÎÎ2 ;
(
ÎÎ; <
request
ÎÎ< C
.
ÎÎC D
Id
ÎÎD F
)
ÎÎF G
;
ÎÎG H
var
ÌÌ  
productTranslation
ÌÌ "
=
ÌÌ# $
await
ÌÌ% *
_context
ÌÌ+ 3
.
ÌÌ3 4!
ProductTranslations
ÌÌ4 G
.
ÌÌG H!
FirstOrDefaultAsync
ÌÌH [
(
ÌÌ[ \
x
ÓÓ 
=>
ÓÓ 
x
ÓÓ 
.
ÓÓ 
	ProductId
ÓÓ  
==
ÓÓ! #
request
ÓÓ$ +
.
ÓÓ+ ,
Id
ÓÓ, .
&&
ÓÓ/ 1
x
ÔÔ 
.
ÔÔ 

LanguageId
ÔÔ 
==
ÔÔ 
request
ÔÔ  '
.
ÔÔ' (

LanguageId
ÔÔ( 2
)
ÔÔ2 3
;
ÔÔ3 4
if
ÒÒ 
(
ÒÒ 
product
ÒÒ 
==
ÒÒ 
null
ÒÒ 
||
ÒÒ  " 
productTranslation
ÒÒ# 5
==
ÒÒ6 8
null
ÒÒ9 =
)
ÒÒ= >
{
ÚÚ 
throw
ÛÛ 
new
ÛÛ 
EShopeException
ÛÛ )
(
ÛÛ) *
$"
ÛÛ* ,
$str
ÛÛ, K
{
ÛÛK L
request
ÛÛL S
.
ÛÛS T
Id
ÛÛT V
}
ÛÛV W
"
ÛÛW X
)
ÛÛX Y
;
ÛÛY Z
}
ÙÙ  
productTranslation
ˆˆ 
.
ˆˆ 
Name
ˆˆ #
=
ˆˆ$ %
request
ˆˆ& -
.
ˆˆ- .
Name
ˆˆ. 2
;
ˆˆ2 3 
productTranslation
˜˜ 
.
˜˜ 
SeoAlias
˜˜ '
=
˜˜( )
request
˜˜* 1
.
˜˜1 2
SeoAlias
˜˜2 :
;
˜˜: ; 
productTranslation
¯¯ 
.
¯¯ 
SeoDescription
¯¯ -
=
¯¯. /
request
¯¯0 7
.
¯¯7 8
SeoDescription
¯¯8 F
;
¯¯F G 
productTranslation
˘˘ 
.
˘˘ 
SeoTitle
˘˘ '
=
˘˘( )
request
˘˘* 1
.
˘˘1 2
SeoTitle
˘˘2 :
;
˘˘: ; 
productTranslation
˙˙ 
.
˙˙ 
Description
˙˙ *
=
˙˙+ ,
request
˙˙- 4
.
˙˙4 5
Description
˙˙5 @
;
˙˙@ A 
productTranslation
˚˚ 
.
˚˚ 
Details
˚˚ &
=
˚˚' (
request
˚˚) 0
.
˚˚0 1
Details
˚˚1 8
;
˚˚8 9
if
˛˛ 
(
˛˛ 
request
˛˛ 
.
˛˛ 
ThumbnailImage
˛˛ &
!=
˛˛' )
null
˛˛* .
)
˛˛. /
{
ˇˇ 
var
ÅÅ 
thumbnailImage
ÅÅ "
=
ÅÅ# $
await
ÅÅ% *
_context
ÅÅ+ 3
.
ÅÅ3 4
ProductImages
ÅÅ4 A
.
ÅÅA B!
FirstOrDefaultAsync
ÅÅB U
(
ÅÅU V
x
ÅÅV W
=>
ÅÅX Z
x
ÅÅ[ \
.
ÅÅ\ ]
	Isdefault
ÅÅ] f
==
ÅÅg i
true
ÅÅj n
&&
ÅÅo q
x
ÅÅr s
.
ÅÅs t
	ProductId
ÅÅt }
==ÅÅ~ Ä
requestÅÅÅ à
.ÅÅà â
IdÅÅâ ã
)ÅÅã å
;ÅÅå ç
if
ÇÇ 
(
ÇÇ 
thumbnailImage
ÇÇ "
!=
ÇÇ# %
null
ÇÇ& *
)
ÇÇ* +
{
ÉÉ 
thumbnailImage
ÜÜ "
.
ÜÜ" #
FileSize
ÜÜ# +
=
ÜÜ, -
request
ÜÜ. 5
.
ÜÜ5 6
ThumbnailImage
ÜÜ6 D
.
ÜÜD E
Length
ÜÜE K
;
ÜÜK L
thumbnailImage
áá "
.
áá" #
	ImagePath
áá# ,
=
áá- .
await
áá/ 4
this
áá5 9
.
áá9 :
SaveFile
áá: B
(
ááB C
request
ááC J
.
ááJ K
ThumbnailImage
ááK Y
)
ááY Z
;
ááZ [
_context
àà 
.
àà 
ProductImages
àà *
.
àà* +
Update
àà+ 1
(
àà1 2
thumbnailImage
àà2 @
)
àà@ A
;
ààA B
}
ââ 
}
ää 
_context
åå 
.
åå !
ProductTranslations
åå (
.
åå( )
Update
åå) /
(
åå/ 0 
productTranslation
åå0 B
)
ååB C
;
ååC D
if
éé 
(
éé 
request
éé 
.
éé 

IsFeatured
éé "
||
éé# %
!
éé& '
request
éé' .
.
éé. /

IsFeatured
éé/ 9
)
éé9 :
{
èè 
product
êê 
.
êê 

IsFeatured
êê "
=
êê# $
request
êê% ,
.
êê, -

IsFeatured
êê- 7
;
êê7 8
_context
ëë 
.
ëë 
Products
ëë !
.
ëë! "
Update
ëë" (
(
ëë( )
product
ëë) 0
)
ëë0 1
;
ëë1 2
}
íí 
return
îî 
await
îî 
_context
îî !
.
îî! "
SaveChangesAsync
îî" 2
(
îî2 3
)
îî3 4
;
îî4 5
}
ïï 	
public
òò 
async
òò 
Task
òò 
<
òò 
bool
òò 
>
òò 
UpdatePrice
òò  +
(
òò+ ,
int
òò, /
	ProductId
òò0 9
,
òò9 :
decimal
òò; B
newPrice
òòC K
)
òòK L
{
ôô 	
var
öö 
product
öö 
=
öö 
await
öö 
_context
öö  (
.
öö( )
Products
öö) 1
.
öö1 2
	FindAsync
öö2 ;
(
öö; <
	ProductId
öö< E
)
ööE F
;
ööF G
if
õõ 
(
õõ 
product
õõ 
==
õõ 
null
õõ 
)
õõ  
throw
õõ! &
new
õõ' *
EShopeException
õõ+ :
(
õõ: ;
$"
õõ; =
$str
õõ= \
{
õõ\ ]
	ProductId
õõ] f
}
õõf g
"
õõg h
)
õõh i
;
õõi j
product
úú 
.
úú 
Price
úú 
=
úú 
newPrice
úú $
;
úú$ %
return
ùù 
await
ùù 
_context
ùù !
.
ùù! "
SaveChangesAsync
ùù" 2
(
ùù2 3
)
ùù3 4
>
ùù5 6
$num
ùù7 8
;
ùù8 9
}
ûû 	
public
†† 
async
†† 
Task
†† 
<
†† 
bool
†† 
>
†† 
UpdateStock
††  +
(
††+ ,
int
††, /
	ProductId
††0 9
,
††9 :
int
††; >
addedQuantity
††? L
)
††L M
{
°° 	
var
¢¢ 
product
¢¢ 
=
¢¢ 
await
¢¢ 
_context
¢¢  (
.
¢¢( )
Products
¢¢) 1
.
¢¢1 2
	FindAsync
¢¢2 ;
(
¢¢; <
	ProductId
¢¢< E
)
¢¢E F
;
¢¢F G
if
££ 
(
££ 
product
££ 
==
££ 
null
££ 
)
££  
throw
££! &
new
££' *
EShopeException
££+ :
(
££: ;
$"
££; =
$str
££= \
{
££\ ]
	ProductId
££] f
}
££f g
"
££g h
)
££h i
;
££i j
if
§§ 
(
§§ 
addedQuantity
§§ 
==
§§  
$num
§§! "
)
§§" #
{
•• 
product
¶¶ 
.
¶¶ 
Stock
¶¶ 
+=
¶¶  
$num
¶¶! "
;
¶¶" #
await
ßß 
_context
ßß 
.
ßß 
SaveChangesAsync
ßß /
(
ßß/ 0
)
ßß0 1
;
ßß1 2
product
®® 
.
®® 
Stock
®® 
-=
®®  
$num
®®! "
;
®®" #
return
©© 
await
©© 
_context
©© %
.
©©% &
SaveChangesAsync
©©& 6
(
©©6 7
)
©©7 8
>
©©9 :
$num
©©; <
;
©©< =
}
™™ 
product
´´ 
.
´´ 
Stock
´´ 
+=
´´ 
addedQuantity
´´ *
;
´´* +
return
¨¨ 
await
¨¨ 
_context
¨¨ !
.
¨¨! "
SaveChangesAsync
¨¨" 2
(
¨¨2 3
)
¨¨3 4
>
¨¨5 6
$num
¨¨7 8
;
¨¨8 9
}
≠≠ 	
public
±± 
async
±± 
Task
±± 
<
±± 
int
±± 
>
±± 
AddImage
±± '
(
±±' ('
ProductImageCreateRequest
±±( A
request
±±B I
)
±±I J
{
≤≤ 	
var
¥¥ 
productImage
¥¥ 
=
¥¥ 
new
¥¥ "
ProductImage
¥¥# /
(
¥¥/ 0
)
¥¥0 1
{
µµ 
Caption
∂∂ 
=
∂∂ 
request
∂∂ !
.
∂∂! "
Caption
∂∂" )
,
∂∂) *
DateCreated
∑∑ 
=
∑∑ 
DateTime
∑∑ &
.
∑∑& '
Now
∑∑' *
,
∑∑* +
	Isdefault
∏∏ 
=
∏∏ 
request
∏∏ #
.
∏∏# $
	Isdefault
∏∏$ -
,
∏∏- .
	ProductId
ππ 
=
ππ 
request
ππ #
.
ππ# $
	ProductId
ππ$ -
,
ππ- .
	SortOrder
∫∫ 
=
∫∫ 
request
∫∫ #
.
∫∫# $
	SortOrder
∫∫$ -
}
ªª 
;
ªª 
if
ºº 
(
ºº 
request
ºº 
.
ºº 
	ImageFile
ºº !
!=
ºº" $
null
ºº% )
)
ºº) *
{
ΩΩ 
productImage
øø 
.
øø 
	ImagePath
øø &
=
øø' (
await
øø) .
this
øø/ 3
.
øø3 4
SaveFile
øø4 <
(
øø< =
request
øø= D
.
øøD E
	ImageFile
øøE N
)
øøN O
;
øøO P
productImage
¿¿ 
.
¿¿ 
FileSize
¿¿ %
=
¿¿& '
request
¿¿( /
.
¿¿/ 0
	ImageFile
¿¿0 9
.
¿¿9 :
Length
¿¿: @
;
¿¿@ A
}
¡¡ 
_context
¬¬ 
.
¬¬ 
ProductImages
¬¬ "
.
¬¬" #
Add
¬¬# &
(
¬¬& '
productImage
¬¬' 3
)
¬¬3 4
;
¬¬4 5
await
√√ 
_context
√√ 
.
√√ 
SaveChangesAsync
√√ +
(
√√+ ,
)
√√, -
;
√√- .
return
ƒƒ 
productImage
ƒƒ 
.
ƒƒ  
Id
ƒƒ  "
;
ƒƒ" #
}
≈≈ 	
public
«« 
async
«« 
Task
«« 
<
«« 
int
«« 
>
«« 
UpDateImage
«« *
(
««* +
int
««+ .
imageId
««/ 6
,
««6 7'
ProductImageUpdateRequest
««8 Q
request
««R Y
)
««Y Z
{
»» 	
var
…… 
productImage
…… 
=
…… 
await
…… $
_context
……% -
.
……- .
ProductImages
……. ;
.
……; <
	FindAsync
……< E
(
……E F
imageId
……F M
)
……M N
;
……N O
if
   
(
   
productImage
   
==
   
null
    $
)
  $ %
throw
ÀÀ 
new
ÀÀ 
EShopeException
ÀÀ )
(
ÀÀ) *
$"
ÀÀ* ,
$str
ÀÀ, I
{
ÀÀI J
imageId
ÀÀJ Q
}
ÀÀQ R
"
ÀÀR S
)
ÀÀS T
;
ÀÀT U
if
ÃÃ 
(
ÃÃ 
request
ÃÃ 
.
ÃÃ 
	ImageFile
ÃÃ !
!=
ÃÃ" $
null
ÃÃ% )
)
ÃÃ) *
{
ÕÕ 
productImage
ŒŒ 
.
ŒŒ 
	ImagePath
ŒŒ &
=
ŒŒ' (
await
ŒŒ) .
this
ŒŒ/ 3
.
ŒŒ3 4
SaveFile
ŒŒ4 <
(
ŒŒ< =
request
ŒŒ= D
.
ŒŒD E
	ImageFile
ŒŒE N
)
ŒŒN O
;
ŒŒO P
productImage
œœ 
.
œœ 
FileSize
œœ %
=
œœ& '
request
œœ( /
.
œœ/ 0
	ImageFile
œœ0 9
.
œœ9 :
Length
œœ: @
;
œœ@ A
}
–– 
_context
““ 
.
““ 
ProductImages
““ "
.
““" #
Update
““# )
(
““) *
productImage
““* 6
)
““6 7
;
““7 8
return
”” 
await
”” 
_context
”” !
.
””! "
SaveChangesAsync
””" 2
(
””2 3
)
””3 4
;
””4 5
}
‘‘ 	
public
÷÷ 
async
÷÷ 
Task
÷÷ 
<
÷÷ 
ProductImageVm
÷÷ (
>
÷÷( )
GetImageById
÷÷* 6
(
÷÷6 7
int
÷÷7 :
imageId
÷÷; B
)
÷÷B C
{
◊◊ 	
var
ÿÿ 
image
ÿÿ 
=
ÿÿ 
await
ÿÿ 
_context
ÿÿ &
.
ÿÿ& '
ProductImages
ÿÿ' 4
.
ÿÿ4 5
	FindAsync
ÿÿ5 >
(
ÿÿ> ?
imageId
ÿÿ? F
)
ÿÿF G
;
ÿÿG H
if
ŸŸ 
(
ŸŸ 
image
ŸŸ 
==
ŸŸ 
null
ŸŸ 
)
ŸŸ 
throw
⁄⁄ 
new
⁄⁄ 
EShopeException
⁄⁄ )
(
⁄⁄) *
$"
⁄⁄* ,
$str
⁄⁄, I
{
⁄⁄I J
imageId
⁄⁄J Q
}
⁄⁄Q R
"
⁄⁄R S
)
⁄⁄S T
;
⁄⁄T U
var
€€ 
	viewModel
€€ 
=
€€ 
new
€€ 
ProductImageVm
€€  .
(
€€. /
)
€€/ 0
{
‹‹ 
Caption
›› 
=
›› 
image
›› 
.
››  
Caption
››  '
,
››' (
DateCreated
ﬁﬁ 
=
ﬁﬁ 
image
ﬁﬁ #
.
ﬁﬁ# $
DateCreated
ﬁﬁ$ /
,
ﬁﬁ/ 0
FileSize
ﬂﬂ 
=
ﬂﬂ 
image
ﬂﬂ  
.
ﬂﬂ  !
FileSize
ﬂﬂ! )
,
ﬂﬂ) *
Id
‡‡ 
=
‡‡ 
image
‡‡ 
.
‡‡ 
Id
‡‡ 
,
‡‡ 
	ImagePath
·· 
=
·· 
image
·· !
.
··! "
	ImagePath
··" +
,
··+ ,
	Isdefault
‚‚ 
=
‚‚ 
image
‚‚ !
.
‚‚! "
	Isdefault
‚‚" +
,
‚‚+ ,
	ProductId
„„ 
=
„„ 
image
„„ !
.
„„! "
	ProductId
„„" +
,
„„+ ,
	SortOrder
‰‰ 
=
‰‰ 
image
‰‰ !
.
‰‰! "
	SortOrder
‰‰" +
}
ÂÂ 
;
ÂÂ 
return
ÁÁ 
	viewModel
ÁÁ 
;
ÁÁ 
}
ËË 	
public
ÍÍ 
async
ÍÍ 
Task
ÍÍ 
<
ÍÍ 
List
ÍÍ 
<
ÍÍ 
ProductImageVm
ÍÍ -
>
ÍÍ- .
>
ÍÍ. /
GetListImages
ÍÍ0 =
(
ÍÍ= >
int
ÍÍ> A
	productId
ÍÍB K
)
ÍÍK L
{
ÎÎ 	
return
ÏÏ 
await
ÏÏ 
_context
ÏÏ !
.
ÏÏ! "
ProductImages
ÏÏ" /
.
ÏÏ/ 0
Where
ÏÏ0 5
(
ÏÏ5 6
x
ÏÏ6 7
=>
ÏÏ8 :
x
ÏÏ; <
.
ÏÏ< =
	ProductId
ÏÏ= F
==
ÏÏG I
	productId
ÏÏJ S
)
ÏÏS T
.
ÌÌ 
Select
ÌÌ 
(
ÌÌ 
i
ÌÌ 
=>
ÌÌ 
new
ÌÌ  
ProductImageVm
ÌÌ! /
(
ÌÌ/ 0
)
ÌÌ0 1
{
ÓÓ 
Caption
ÔÔ 
=
ÔÔ 
i
ÔÔ 
.
ÔÔ  
Caption
ÔÔ  '
,
ÔÔ' (
DateCreated
 
=
  !
i
" #
.
# $
DateCreated
$ /
,
/ 0
FileSize
ÒÒ 
=
ÒÒ 
i
ÒÒ  
.
ÒÒ  !
FileSize
ÒÒ! )
,
ÒÒ) *
Id
ÚÚ 
=
ÚÚ 
i
ÚÚ 
.
ÚÚ 
Id
ÚÚ 
,
ÚÚ 
	ImagePath
ÛÛ 
=
ÛÛ 
i
ÛÛ  !
.
ÛÛ! "
	ImagePath
ÛÛ" +
,
ÛÛ+ ,
	Isdefault
ÙÙ 
=
ÙÙ 
i
ÙÙ  !
.
ÙÙ! "
	Isdefault
ÙÙ" +
,
ÙÙ+ ,
	ProductId
ıı 
=
ıı 
i
ıı  !
.
ıı! "
	ProductId
ıı" +
,
ıı+ ,
	SortOrder
ˆˆ 
=
ˆˆ 
i
ˆˆ  !
.
ˆˆ! "
	SortOrder
ˆˆ" +
}
˜˜ 
)
˜˜ 
.
˜˜ 
ToListAsync
˜˜ 
(
˜˜ 
)
˜˜  
;
˜˜  !
}
¯¯ 	
public
˙˙ 
async
˙˙ 
Task
˙˙ 
<
˙˙ 
int
˙˙ 
>
˙˙ 
RemoveImage
˙˙ *
(
˙˙* +
int
˙˙+ .
imageId
˙˙/ 6
)
˙˙6 7
{
˚˚ 	
var
¸¸ 
productImage
¸¸ 
=
¸¸ 
await
¸¸ $
_context
¸¸% -
.
¸¸- .
ProductImages
¸¸. ;
.
¸¸; <
	FindAsync
¸¸< E
(
¸¸E F
imageId
¸¸F M
)
¸¸M N
;
¸¸N O
if
˝˝ 
(
˝˝ 
productImage
˝˝ 
==
˝˝ 
null
˝˝  $
)
˝˝$ %
throw
˛˛ 
new
˛˛ 
EShopeException
˛˛ )
(
˛˛) *
$"
˛˛* ,
$str
˛˛, I
{
˛˛I J
imageId
˛˛J Q
}
˛˛Q R
"
˛˛R S
)
˛˛S T
;
˛˛T U
_context
ˇˇ 
.
ˇˇ 
ProductImages
ˇˇ "
.
ˇˇ" #
Remove
ˇˇ# )
(
ˇˇ) *
productImage
ˇˇ* 6
)
ˇˇ6 7
;
ˇˇ7 8
return
ÄÄ 
await
ÄÄ 
_context
ÄÄ !
.
ÄÄ! "
SaveChangesAsync
ÄÄ" 2
(
ÄÄ2 3
)
ÄÄ3 4
;
ÄÄ4 5
}
ÅÅ 	
private
ÑÑ 
async
ÑÑ 
Task
ÑÑ 
<
ÑÑ 
string
ÑÑ !
>
ÑÑ! "
SaveFile
ÑÑ# +
(
ÑÑ+ ,
	IFormFile
ÑÑ, 5
file
ÑÑ6 :
)
ÑÑ: ;
{
ÖÖ 	
var
ÜÜ 
originalFileName
ÜÜ  
=
ÜÜ! "+
ContentDispositionHeaderValue
ÜÜ# @
.
ÜÜ@ A
Parse
ÜÜA F
(
ÜÜF G
file
ÜÜG K
.
ÜÜK L 
ContentDisposition
ÜÜL ^
)
ÜÜ^ _
.
ÜÜ_ `
FileName
ÜÜ` h
.
ÜÜh i
Trim
ÜÜi m
(
ÜÜm n
$char
ÜÜn q
)
ÜÜq r
;
ÜÜr s
var
áá 
fileName
áá 
=
áá 
$"
áá 
{
áá 
Guid
áá "
.
áá" #
NewGuid
áá# *
(
áá* +
)
áá+ ,
}
áá, -
{
áá- .
Path
áá. 2
.
áá2 3
GetExtension
áá3 ?
(
áá? @
originalFileName
áá@ P
)
ááP Q
}
ááQ R
"
ááR S
;
ááS T
await
àà 
_storageService
àà !
.
àà! "
SaveFileAsync
àà" /
(
àà/ 0
file
àà0 4
.
àà4 5
OpenReadStream
àà5 C
(
ààC D
)
ààD E
,
ààE F
fileName
ààG O
)
ààO P
;
ààP Q
return
ââ 
fileName
ââ 
;
ââ 
}
ää 	
public
åå 
async
åå 
Task
åå 
<
åå 
PagedResult
åå %
<
åå% &
	ProductVm
åå& /
>
åå/ 0
>
åå0 1 
GetAllByCategoryId
åå2 D
(
ååD E
string
ååE K

languageId
ååL V
,
ååV W+
GetPublicProductPagingRequest
ååX u
request
ååv }
)
åå} ~
{
çç 	
var
èè 
query
èè 
=
èè 
from
èè 
p
èè 
in
èè !
_context
èè" *
.
èè* +
Products
èè+ 3
join
êê 
pt
êê 
in
êê  "
_context
êê# +
.
êê+ ,!
ProductTranslations
êê, ?
on
ëë 
p
ëë 
.
ëë 
Id
ëë 
equals
ëë  &
pt
ëë' )
.
ëë) *
	ProductId
ëë* 3
join
íí 
pic
íí  
in
íí! #
_context
íí$ ,
.
íí, -!
ProductInCategories
íí- @
on
ííA C
p
ííD E
.
ííE F
Id
ííF H
equals
ííI O
pic
ííP S
.
ííS T
	ProductId
ííT ]
join
îî 
c
îî 
in
îî !
_context
îî" *
.
îî* +

Categories
îî+ 5
on
îî6 8
pic
îî9 <
.
îî< =

CategoryId
îî= G
equals
îîH N
c
îîO P
.
îîP Q
Id
îîQ S
where
ïï 
pt
ïï  
.
ïï  !

LanguageId
ïï! +
==
ïï, .

languageId
ïï/ 9
select
ññ 
new
ññ "
{
ññ# $
p
ññ% &
,
ññ& '
pt
ññ( *
,
ññ* +
pic
ññ, /
}
ññ0 1
;
ññ1 2
if
ôô 
(
ôô 
request
ôô 
.
ôô 

CategoryId
ôô "
.
ôô" #
HasValue
ôô# +
&&
ôô, .
request
ôô/ 6
.
ôô6 7

CategoryId
ôô7 A
.
ôôA B
Value
ôôB G
>
ôôH I
$num
ôôJ K
)
ôôK L
{
öö 
query
úú 
=
úú 
query
úú 
.
úú 
Where
úú #
(
úú# $
p
úú$ %
=>
úú& (
p
úú) *
.
úú* +
pic
úú+ .
.
úú. /

CategoryId
úú/ 9
==
úú: <
request
úú= D
.
úúD E

CategoryId
úúE O
)
úúO P
;
úúP Q
}
ùù 
int
üü 
totalRow
üü 
=
üü 
await
üü  
query
üü! &
.
üü& '

CountAsync
üü' 1
(
üü1 2
)
üü2 3
;
üü3 4
var
†† 
data
†† 
=
†† 
await
†† 
query
†† "
.
††" #
Skip
††# '
(
††' (
(
††( )
request
††) 0
.
††0 1
	PageIndex
††1 :
-
††; <
$num
††= >
)
††> ?
*
††@ A
request
††B I
.
††I J
PageSize
††J R
)
††R S
.
°° 
Take
°° 
(
°° 
request
°° 
.
°° 
PageSize
°° &
)
°°& '
.
¢¢ 
Select
¢¢ 
(
¢¢ 
x
¢¢ 
=>
¢¢ 
new
¢¢  
	ProductVm
¢¢! *
(
¢¢* +
)
¢¢+ ,
{
££ 
Id
§§ 
=
§§ 
x
§§ 
.
§§ 
p
§§ 
.
§§ 
Id
§§ 
,
§§  
Name
•• 
=
•• 
x
•• 
.
•• 
pt
•• 
.
••  
Name
••  $
,
••$ %
DateCreated
¶¶ 
=
¶¶  !
x
¶¶" #
.
¶¶# $
p
¶¶$ %
.
¶¶% &
DateCreated
¶¶& 1
,
¶¶1 2
Description
ßß 
=
ßß  !
x
ßß" #
.
ßß# $
pt
ßß$ &
.
ßß& '
Description
ßß' 2
,
ßß2 3
Details
®® 
=
®® 
x
®® 
.
®®  
pt
®®  "
.
®®" #
Details
®®# *
,
®®* +

LanguageId
©© 
=
©©  
x
©©! "
.
©©" #
pt
©©# %
.
©©% &

LanguageId
©©& 0
,
©©0 1
OriginalPrice
™™ !
=
™™" #
x
™™$ %
.
™™% &
p
™™& '
.
™™' (
OriginalPrice
™™( 5
,
™™5 6
Price
´´ 
=
´´ 
x
´´ 
.
´´ 
p
´´ 
.
´´  
Price
´´  %
,
´´% &
SeoAlias
¨¨ 
=
¨¨ 
x
¨¨  
.
¨¨  !
pt
¨¨! #
.
¨¨# $
SeoAlias
¨¨$ ,
,
¨¨, -
SeoDescription
≠≠ "
=
≠≠# $
x
≠≠% &
.
≠≠& '
pt
≠≠' )
.
≠≠) *
SeoDescription
≠≠* 8
,
≠≠8 9
SeoTitle
ÆÆ 
=
ÆÆ 
x
ÆÆ  
.
ÆÆ  !
pt
ÆÆ! #
.
ÆÆ# $
SeoTitle
ÆÆ$ ,
,
ÆÆ, -
Stock
ØØ 
=
ØØ 
x
ØØ 
.
ØØ 
p
ØØ 
.
ØØ  
Stock
ØØ  %
,
ØØ% &
	ViewCount
∞∞ 
=
∞∞ 
x
∞∞  !
.
∞∞! "
p
∞∞" #
.
∞∞# $
	ViewCount
∞∞$ -
,
∞∞- .
}
±± 
)
±± 
.
±± 
ToListAsync
±± 
(
±± 
)
±±  
;
±±  !
var
≥≥ 
pagedResult
≥≥ 
=
≥≥ 
new
≥≥ !
PagedResult
≥≥" -
<
≥≥- .
	ProductVm
≥≥. 7
>
≥≥7 8
(
≥≥8 9
)
≥≥9 :
{
¥¥ 
TotalRecords
µµ 
=
µµ 
totalRow
µµ '
,
µµ' (
PageSize
∂∂ 
=
∂∂ 
request
∂∂ "
.
∂∂" #
PageSize
∂∂# +
,
∂∂+ ,
	PageIndex
∑∑ 
=
∑∑ 
request
∑∑ #
.
∑∑# $
	PageIndex
∑∑$ -
,
∑∑- .
Items
∏∏ 
=
∏∏ 
data
∏∏ 
}
ππ 
;
ππ 
return
∫∫ 
pagedResult
∫∫ 
;
∫∫ 
}
ªª 	
public
ΩΩ 
async
ΩΩ 
Task
ΩΩ 
<
ΩΩ 
	ApiResult
ΩΩ #
<
ΩΩ# $
bool
ΩΩ$ (
>
ΩΩ( )
>
ΩΩ) *
CategoryAssign
ΩΩ+ 9
(
ΩΩ9 :
int
ΩΩ: =
id
ΩΩ> @
,
ΩΩ@ A#
CategoryAssignRequest
ΩΩB W
request
ΩΩX _
)
ΩΩ_ `
{
ææ 	
var
¿¿ 
user
¿¿ 
=
¿¿ 
await
¿¿ 
_context
¿¿ %
.
¿¿% &
Products
¿¿& .
.
¿¿. /
	FindAsync
¿¿/ 8
(
¿¿8 9
id
¿¿9 ;
)
¿¿; <
;
¿¿< =
if
¡¡ 
(
¡¡ 
user
¡¡ 
==
¡¡ 
null
¡¡ 
)
¡¡ 
{
¬¬ 
return
√√ 
new
√√ 
ApiErrorResult
√√ )
<
√√) *
bool
√√* .
>
√√. /
(
√√/ 0
$"
√√0 2
$str
√√2 B
{
√√B C
id
√√C E
}
√√E F
$str
√√F T
"
√√T U
)
√√U V
;
√√V W
}
ƒƒ 
foreach
≈≈ 
(
≈≈ 
var
≈≈ 
category
≈≈ !
in
≈≈" $
request
≈≈% ,
.
≈≈, -

Categories
≈≈- 7
)
≈≈7 8
{
∆∆ 
var
«« 
productInCategory
«« %
=
««& '
await
««( -
_context
««. 6
.
««6 7!
ProductInCategories
««7 J
.
««J K!
FirstOrDefaultAsync
««K ^
(
««^ _
x
««_ `
=>
««a c
x
»» 
.
»» 

CategoryId
»» 
==
»» 
int
»»  #
.
»»# $
Parse
»»$ )
(
»») *
category
»»* 2
.
»»2 3
Id
»»3 5
)
»»5 6
&&
…… 
x
…… 
.
…… 
	ProductId
…… 
==
…… !
id
……" $
)
……$ %
;
……% &
if
   
(
   
productInCategory
   %
!=
  & (
null
  ) -
&&
  . 0
category
  1 9
.
  9 :
Selected
  : B
==
  C E
false
  F K
)
  K L
{
ÀÀ 
_context
ÃÃ 
.
ÃÃ !
ProductInCategories
ÃÃ 0
.
ÃÃ0 1
Remove
ÃÃ1 7
(
ÃÃ7 8
productInCategory
ÃÃ8 I
)
ÃÃI J
;
ÃÃJ K
}
ÕÕ 
else
ŒŒ 
if
ŒŒ 
(
ŒŒ 
productInCategory
ŒŒ *
==
ŒŒ+ -
null
ŒŒ. 2
&&
ŒŒ3 5
category
ŒŒ6 >
.
ŒŒ> ?
Selected
ŒŒ? G
)
ŒŒG H
{
œœ 
await
–– 
_context
–– "
.
––" #!
ProductInCategories
––# 6
.
––6 7
AddAsync
––7 ?
(
––? @
new
––@ C
ProductInCategory
––D U
(
––U V
)
––V W
{
—— 

CategoryId
““ "
=
““# $
int
““% (
.
““( )
Parse
““) .
(
““. /
category
““/ 7
.
““7 8
Id
““8 :
)
““: ;
,
““; <
	ProductId
”” !
=
””" #
id
””$ &
}
‘‘ 
)
‘‘ 
;
‘‘ 
}
’’ 
}
÷÷ 
await
◊◊ 
_context
◊◊ 
.
◊◊ 
SaveChangesAsync
◊◊ +
(
◊◊+ ,
)
◊◊, -
;
◊◊- .
return
ÿÿ 
new
ÿÿ 
ApiSuccessResult
ÿÿ '
<
ÿÿ' (
bool
ÿÿ( ,
>
ÿÿ, -
(
ÿÿ- .
)
ÿÿ. /
;
ÿÿ/ 0
}
ŸŸ 	
public
€€ 
async
€€ 
Task
€€ 
<
€€ 
List
€€ 
<
€€ 
	ProductVm
€€ (
>
€€( )
>
€€) *!
GetFeaturedProducts
€€+ >
(
€€> ?
string
€€? E
	langugeId
€€F O
,
€€O P
int
€€Q T
take
€€U Y
)
€€Y Z
{
‹‹ 	
var
›› 
query
›› 
=
›› 
from
›› 
p
›› 
in
›› !
_context
››" *
.
››* +
Products
››+ 3
join
ﬁﬁ 
pt
ﬁﬁ 
in
ﬁﬁ  "
_context
ﬁﬁ# +
.
ﬁﬁ+ ,!
ProductTranslations
ﬁﬁ, ?
on
ﬁﬁ@ B
p
ﬁﬁC D
.
ﬁﬁD E
Id
ﬁﬁE G
equals
ﬁﬁH N
pt
ﬁﬁO Q
.
ﬁﬁQ R
	ProductId
ﬁﬁR [
join
ﬂﬂ 
pic
ﬂﬂ  
in
ﬂﬂ! #
_context
ﬂﬂ$ ,
.
ﬂﬂ, -!
ProductInCategories
ﬂﬂ- @
on
ﬂﬂA C
p
ﬂﬂD E
.
ﬂﬂE F
Id
ﬂﬂF H
equals
ﬂﬂI O
pic
ﬂﬂP S
.
ﬂﬂS T
	ProductId
ﬂﬂT ]
into
‡‡ 
ppic
‡‡ !
from
·· 
pic
··  
in
··! #
ppic
··$ (
.
··( )
DefaultIfEmpty
··) 7
(
··7 8
)
··8 9
join
‚‚ 
pi
‚‚ 
in
‚‚  "
_context
‚‚# +
.
‚‚+ ,
ProductImages
‚‚, 9
on
‚‚: <
p
‚‚= >
.
‚‚> ?
Id
‚‚? A
equals
‚‚B H
pi
‚‚I K
.
‚‚K L
	ProductId
‚‚L U
into
‚‚V Z
ppi
‚‚[ ^
from
„„ 
pi
„„ 
in
„„  "
ppi
„„# &
.
„„& '
DefaultIfEmpty
„„' 5
(
„„5 6
)
„„6 7
where
‰‰ 
(
‰‰ 
pi
‰‰ !
.
‰‰! "
	Isdefault
‰‰" +
)
‰‰+ ,
join
ÂÂ 
c
ÂÂ 
in
ÂÂ !
_context
ÂÂ" *
.
ÂÂ* +

Categories
ÂÂ+ 5
on
ÂÂ6 8
pic
ÂÂ9 <
.
ÂÂ< =

CategoryId
ÂÂ= G
equals
ÂÂH N
c
ÂÂO P
.
ÂÂP Q
Id
ÂÂQ S
into
ÂÂT X
picc
ÂÂY ]
from
ÊÊ 
c
ÊÊ 
in
ÊÊ !
picc
ÊÊ" &
.
ÊÊ& '
DefaultIfEmpty
ÊÊ' 5
(
ÊÊ5 6
)
ÊÊ6 7
where
ÁÁ 
pt
ÁÁ  
.
ÁÁ  !

LanguageId
ÁÁ! +
==
ÁÁ, .
	langugeId
ÁÁ/ 8
&&
ÁÁ9 ;
(
ÁÁ< =
pi
ÁÁ= ?
==
ÁÁ@ B
null
ÁÁC G
||
ÁÁH J
pi
ÁÁK M
.
ÁÁM N
	Isdefault
ÁÁN W
==
ÁÁX Z
true
ÁÁ[ _
)
ÁÁ_ `
&&
ÁÁa c
p
ÁÁd e
.
ÁÁe f

IsFeatured
ÁÁf p
==
ÁÁq s
true
ÁÁt x
select
ËË 
new
ËË "
{
ËË# $
p
ËË% &
,
ËË& '
pt
ËË( *
,
ËË* +
pic
ËË, /
,
ËË/ 0
pi
ËË1 3
}
ËË4 5
;
ËË5 6
var
ÍÍ 
data
ÍÍ 
=
ÍÍ 
await
ÍÍ 
query
ÍÍ "
.
ÍÍ" #
OrderByDescending
ÍÍ# 4
(
ÍÍ4 5
x
ÍÍ5 6
=>
ÍÍ7 9
x
ÍÍ: ;
.
ÍÍ; <
p
ÍÍ< =
.
ÍÍ= >
DateCreated
ÍÍ> I
)
ÍÍI J
.
ÍÍJ K
Take
ÍÍK O
(
ÍÍO P
take
ÍÍP T
)
ÍÍT U
.
ÎÎ 
Select
ÎÎ 
(
ÎÎ 
x
ÎÎ 
=>
ÎÎ 
new
ÎÎ  
	ProductVm
ÎÎ! *
(
ÎÎ* +
)
ÎÎ+ ,
{
ÏÏ 
Id
ÌÌ 
=
ÌÌ 
x
ÌÌ 
.
ÌÌ 
p
ÌÌ 
.
ÌÌ 
Id
ÌÌ 
,
ÌÌ  
Name
ÓÓ 
=
ÓÓ 
x
ÓÓ 
.
ÓÓ 
pt
ÓÓ 
.
ÓÓ  
Name
ÓÓ  $
,
ÓÓ$ %
DateCreated
ÔÔ 
=
ÔÔ  !
x
ÔÔ" #
.
ÔÔ# $
p
ÔÔ$ %
.
ÔÔ% &
DateCreated
ÔÔ& 1
,
ÔÔ1 2
Description
 
=
  !
x
" #
.
# $
pt
$ &
.
& '
Description
' 2
,
2 3
Details
ÒÒ 
=
ÒÒ 
x
ÒÒ 
.
ÒÒ  
pt
ÒÒ  "
.
ÒÒ" #
Details
ÒÒ# *
,
ÒÒ* +

LanguageId
ÚÚ 
=
ÚÚ  
x
ÚÚ! "
.
ÚÚ" #
pt
ÚÚ# %
.
ÚÚ% &

LanguageId
ÚÚ& 0
,
ÚÚ0 1
OriginalPrice
ÛÛ !
=
ÛÛ" #
x
ÛÛ$ %
.
ÛÛ% &
p
ÛÛ& '
.
ÛÛ' (
OriginalPrice
ÛÛ( 5
,
ÛÛ5 6
Price
ÙÙ 
=
ÙÙ 
x
ÙÙ 
.
ÙÙ 
p
ÙÙ 
.
ÙÙ  
Price
ÙÙ  %
,
ÙÙ% &
SeoAlias
ıı 
=
ıı 
x
ıı  
.
ıı  !
pt
ıı! #
.
ıı# $
SeoAlias
ıı$ ,
,
ıı, -
SeoDescription
ˆˆ "
=
ˆˆ# $
x
ˆˆ% &
.
ˆˆ& '
pt
ˆˆ' )
.
ˆˆ) *
SeoDescription
ˆˆ* 8
,
ˆˆ8 9
SeoTitle
˜˜ 
=
˜˜ 
x
˜˜  
.
˜˜  !
pt
˜˜! #
.
˜˜# $
SeoTitle
˜˜$ ,
,
˜˜, -
Stock
¯¯ 
=
¯¯ 
x
¯¯ 
.
¯¯ 
p
¯¯ 
.
¯¯  
Stock
¯¯  %
,
¯¯% &
	ViewCount
˘˘ 
=
˘˘ 
x
˘˘  !
.
˘˘! "
p
˘˘" #
.
˘˘# $
	ViewCount
˘˘$ -
,
˘˘- .
ThumbnailImage
˙˙ "
=
˙˙# $
x
˙˙% &
.
˙˙& '
pi
˙˙' )
.
˙˙) *
	ImagePath
˙˙* 3
}
˚˚ 
)
˚˚ 
.
˚˚ 
ToListAsync
˚˚ 
(
˚˚ 
)
˚˚  
;
˚˚  !
return
˛˛ 
data
˛˛ 
;
˛˛ 
}
ˇˇ 	
public
ÅÅ 
async
ÅÅ 
Task
ÅÅ 
<
ÅÅ 
List
ÅÅ 
<
ÅÅ 
	ProductVm
ÅÅ (
>
ÅÅ( )
>
ÅÅ) *
GetLatestProducts
ÅÅ+ <
(
ÅÅ< =
string
ÅÅ= C
	langugeId
ÅÅD M
,
ÅÅM N
int
ÅÅO R
take
ÅÅS W
)
ÅÅW X
{
ÇÇ 	
var
ÉÉ 
query
ÉÉ 
=
ÉÉ 
from
ÉÉ 
p
ÉÉ 
in
ÉÉ !
_context
ÉÉ" *
.
ÉÉ* +
Products
ÉÉ+ 3
join
ÑÑ 
pt
ÑÑ 
in
ÑÑ  "
_context
ÑÑ# +
.
ÑÑ+ ,!
ProductTranslations
ÑÑ, ?
on
ÑÑ@ B
p
ÑÑC D
.
ÑÑD E
Id
ÑÑE G
equals
ÑÑH N
pt
ÑÑO Q
.
ÑÑQ R
	ProductId
ÑÑR [
join
ÖÖ 
pic
ÖÖ  
in
ÖÖ! #
_context
ÖÖ$ ,
.
ÖÖ, -!
ProductInCategories
ÖÖ- @
on
ÖÖA C
p
ÖÖD E
.
ÖÖE F
Id
ÖÖF H
equals
ÖÖI O
pic
ÖÖP S
.
ÖÖS T
	ProductId
ÖÖT ]
into
ÜÜ 
ppic
ÜÜ !
from
áá 
pic
áá  
in
áá! #
ppic
áá$ (
.
áá( )
DefaultIfEmpty
áá) 7
(
áá7 8
)
áá8 9
join
àà 
pi
àà 
in
àà  "
_context
àà# +
.
àà+ ,
ProductImages
àà, 9
on
àà: <
p
àà= >
.
àà> ?
Id
àà? A
equals
ààB H
pi
ààI K
.
ààK L
	ProductId
ààL U
into
ààV Z
ppi
àà[ ^
from
ââ 
pi
ââ 
in
ââ  "
ppi
ââ# &
.
ââ& '
DefaultIfEmpty
ââ' 5
(
ââ5 6
)
ââ6 7
where
ää 
(
ää 
pi
ää !
.
ää! "
	Isdefault
ää" +
)
ää+ ,
join
ãã 
c
ãã 
in
ãã !
_context
ãã" *
.
ãã* +

Categories
ãã+ 5
on
ãã6 8
pic
ãã9 <
.
ãã< =

CategoryId
ãã= G
equals
ããH N
c
ããO P
.
ããP Q
Id
ããQ S
into
ããT X
picc
ããY ]
from
åå 
c
åå 
in
åå !
picc
åå" &
.
åå& '
DefaultIfEmpty
åå' 5
(
åå5 6
)
åå6 7
where
çç 
pt
çç  
.
çç  !

LanguageId
çç! +
==
çç, .
	langugeId
çç/ 8
&&
çç9 ;
(
çç< =
pi
çç= ?
==
çç@ B
null
ççC G
||
ççH J
pi
ççK M
.
ççM N
	Isdefault
ççN W
==
ççX Z
true
çç[ _
)
çç_ `
select
éé 
new
éé "
{
éé# $
p
éé% &
,
éé& '
pt
éé( *
,
éé* +
pic
éé, /
,
éé/ 0
pi
éé1 3
}
éé4 5
;
éé5 6
var
êê 
data
êê 
=
êê 
await
êê 
query
êê "
.
êê" #
OrderByDescending
êê# 4
(
êê4 5
x
êê5 6
=>
êê7 9
x
êê: ;
.
êê; <
p
êê< =
.
êê= >
DateCreated
êê> I
)
êêI J
.
êêJ K
Take
êêK O
(
êêO P
take
êêP T
)
êêT U
.
ëë 
Select
ëë 
(
ëë 
x
ëë 
=>
ëë 
new
ëë  
	ProductVm
ëë! *
(
ëë* +
)
ëë+ ,
{
íí 
Id
ìì 
=
ìì 
x
ìì 
.
ìì 
p
ìì 
.
ìì 
Id
ìì 
,
ìì  
Name
îî 
=
îî 
x
îî 
.
îî 
pt
îî 
.
îî  
Name
îî  $
,
îî$ %
DateCreated
ïï 
=
ïï  !
x
ïï" #
.
ïï# $
p
ïï$ %
.
ïï% &
DateCreated
ïï& 1
,
ïï1 2
Description
ññ 
=
ññ  !
x
ññ" #
.
ññ# $
pt
ññ$ &
.
ññ& '
Description
ññ' 2
,
ññ2 3
Details
óó 
=
óó 
x
óó 
.
óó  
pt
óó  "
.
óó" #
Details
óó# *
,
óó* +

LanguageId
òò 
=
òò  
x
òò! "
.
òò" #
pt
òò# %
.
òò% &

LanguageId
òò& 0
,
òò0 1
OriginalPrice
ôô !
=
ôô" #
x
ôô$ %
.
ôô% &
p
ôô& '
.
ôô' (
OriginalPrice
ôô( 5
,
ôô5 6
Price
öö 
=
öö 
x
öö 
.
öö 
p
öö 
.
öö  
Price
öö  %
,
öö% &
SeoAlias
õõ 
=
õõ 
x
õõ  
.
õõ  !
pt
õõ! #
.
õõ# $
SeoAlias
õõ$ ,
,
õõ, -
SeoDescription
úú "
=
úú# $
x
úú% &
.
úú& '
pt
úú' )
.
úú) *
SeoDescription
úú* 8
,
úú8 9
SeoTitle
ùù 
=
ùù 
x
ùù  
.
ùù  !
pt
ùù! #
.
ùù# $
SeoTitle
ùù$ ,
,
ùù, -
Stock
ûû 
=
ûû 
x
ûû 
.
ûû 
p
ûû 
.
ûû  
Stock
ûû  %
,
ûû% &
	ViewCount
üü 
=
üü 
x
üü  !
.
üü! "
p
üü" #
.
üü# $
	ViewCount
üü$ -
,
üü- .
ThumbnailImage
†† "
=
††# $
x
††% &
.
††& '
pi
††' )
.
††) *
	ImagePath
††* 3
}
°° 
)
°° 
.
°° 
ToListAsync
°° 
(
°° 
)
°°  
;
°°  !
return
§§ 
data
§§ 
;
§§ 
}
•• 	
public
ßß 
async
ßß 
Task
ßß 
<
ßß 
List
ßß 
<
ßß 
	ProductVm
ßß (
>
ßß( )
>
ßß) * 
GetRelatedProducts
ßß+ =
(
ßß= >
int
ßß> A
	productId
ßßB K
,
ßßK L
string
ßßM S
	langugeId
ßßT ]
,
ßß] ^
int
ßß_ b
take
ßßc g
)
ßßg h
{
®® 	
var
©© 
product
©© 
=
©© 
from
©© 
p
©©  
in
©©! #
_context
©©$ ,
.
©©, -
Products
©©- 5
join
™™ 
pc
™™ !
in
™™" $
_context
™™% -
.
™™- .!
ProductInCategories
™™. A
on
™™B D
p
™™E F
.
™™F G
Id
™™G I
equals
™™J P
pc
™™Q S
.
™™S T
	ProductId
™™T ]
where
´´ 
(
´´  !
p
´´! "
.
´´" #
Id
´´# %
==
´´& (
	productId
´´) 2
)
´´2 3
select
¨¨  
pc
¨¨! #
.
¨¨# $

CategoryId
¨¨$ .
;
¨¨. /
int
≠≠ 

categoryId
≠≠ 
=
≠≠ 
product
≠≠ $
.
≠≠$ %
FirstOrDefault
≠≠% 3
(
≠≠3 4
)
≠≠4 5
;
≠≠5 6
var
ØØ 
query
ØØ 
=
ØØ 
from
ØØ 
p
ØØ 
in
ØØ !
_context
ØØ" *
.
ØØ* +
Products
ØØ+ 3
join
∞∞ 
pt
∞∞ 
in
∞∞  "
_context
∞∞# +
.
∞∞+ ,!
ProductTranslations
∞∞, ?
on
∞∞@ B
p
∞∞C D
.
∞∞D E
Id
∞∞E G
equals
∞∞H N
pt
∞∞O Q
.
∞∞Q R
	ProductId
∞∞R [
join
±± 
pic
±±  
in
±±! #
_context
±±$ ,
.
±±, -!
ProductInCategories
±±- @
on
±±A C
p
±±D E
.
±±E F
Id
±±F H
equals
±±I O
pic
±±P S
.
±±S T
	ProductId
±±T ]
into
≤≤ 
ppic
≤≤ !
from
≥≥ 
pic
≥≥  
in
≥≥! #
ppic
≥≥$ (
.
≥≥( )
DefaultIfEmpty
≥≥) 7
(
≥≥7 8
)
≥≥8 9
where
¥¥ 
(
¥¥ 
pic
¥¥ "
.
¥¥" #

CategoryId
¥¥# -
==
¥¥. 0

categoryId
¥¥1 ;
)
¥¥; <
join
µµ 
pi
µµ 
in
µµ  "
_context
µµ# +
.
µµ+ ,
ProductImages
µµ, 9
on
µµ: <
p
µµ= >
.
µµ> ?
Id
µµ? A
equals
µµB H
pi
µµI K
.
µµK L
	ProductId
µµL U
into
µµV Z
ppi
µµ[ ^
from
∂∂ 
pi
∂∂ 
in
∂∂  "
ppi
∂∂# &
.
∂∂& '
DefaultIfEmpty
∂∂' 5
(
∂∂5 6
)
∂∂6 7
where
∑∑ 
(
∑∑ 
pi
∑∑ !
.
∑∑! "
	Isdefault
∑∑" +
)
∑∑+ ,
join
∏∏ 
c
∏∏ 
in
∏∏ !
_context
∏∏" *
.
∏∏* +

Categories
∏∏+ 5
on
∏∏6 8
pic
∏∏9 <
.
∏∏< =

CategoryId
∏∏= G
equals
∏∏H N
c
∏∏O P
.
∏∏P Q
Id
∏∏Q S
into
∏∏T X
picc
∏∏Y ]
from
ππ 
c
ππ 
in
ππ !
picc
ππ" &
.
ππ& '
DefaultIfEmpty
ππ' 5
(
ππ5 6
)
ππ6 7
where
∫∫ 
pt
∫∫  
.
∫∫  !

LanguageId
∫∫! +
==
∫∫, .
	langugeId
∫∫/ 8
&&
∫∫9 ;
(
∫∫< =
pi
∫∫= ?
==
∫∫@ B
null
∫∫C G
||
∫∫H J
pi
∫∫K M
.
∫∫M N
	Isdefault
∫∫N W
==
∫∫X Z
true
∫∫[ _
)
∫∫_ `
select
ªª 
new
ªª "
{
ªª# $
p
ªª% &
,
ªª& '
pt
ªª( *
,
ªª* +
pic
ªª, /
,
ªª/ 0
pi
ªª1 3
}
ªª4 5
;
ªª5 6
var
ΩΩ 
data
ΩΩ 
=
ΩΩ 
await
ΩΩ 
query
ΩΩ "
.
ΩΩ" #
OrderByDescending
ΩΩ# 4
(
ΩΩ4 5
x
ΩΩ5 6
=>
ΩΩ7 9
x
ΩΩ: ;
.
ΩΩ; <
p
ΩΩ< =
.
ΩΩ= >
DateCreated
ΩΩ> I
)
ΩΩI J
.
ΩΩJ K
Take
ΩΩK O
(
ΩΩO P
take
ΩΩP T
)
ΩΩT U
.
ææ 
Select
ææ 
(
ææ 
x
ææ 
=>
ææ 
new
ææ  
	ProductVm
ææ! *
(
ææ* +
)
ææ+ ,
{
øø 
Id
¿¿ 
=
¿¿ 
x
¿¿ 
.
¿¿ 
p
¿¿ 
.
¿¿ 
Id
¿¿ 
,
¿¿  
Name
¡¡ 
=
¡¡ 
x
¡¡ 
.
¡¡ 
pt
¡¡ 
.
¡¡  
Name
¡¡  $
,
¡¡$ %
DateCreated
¬¬ 
=
¬¬  !
x
¬¬" #
.
¬¬# $
p
¬¬$ %
.
¬¬% &
DateCreated
¬¬& 1
,
¬¬1 2
Description
√√ 
=
√√  !
x
√√" #
.
√√# $
pt
√√$ &
.
√√& '
Description
√√' 2
,
√√2 3
Details
ƒƒ 
=
ƒƒ 
x
ƒƒ 
.
ƒƒ  
pt
ƒƒ  "
.
ƒƒ" #
Details
ƒƒ# *
,
ƒƒ* +

LanguageId
≈≈ 
=
≈≈  
x
≈≈! "
.
≈≈" #
pt
≈≈# %
.
≈≈% &

LanguageId
≈≈& 0
,
≈≈0 1
OriginalPrice
∆∆ !
=
∆∆" #
x
∆∆$ %
.
∆∆% &
p
∆∆& '
.
∆∆' (
OriginalPrice
∆∆( 5
,
∆∆5 6
Price
«« 
=
«« 
x
«« 
.
«« 
p
«« 
.
««  
Price
««  %
,
««% &
SeoAlias
»» 
=
»» 
x
»»  
.
»»  !
pt
»»! #
.
»»# $
SeoAlias
»»$ ,
,
»», -
SeoDescription
…… "
=
……# $
x
……% &
.
……& '
pt
……' )
.
……) *
SeoDescription
……* 8
,
……8 9
SeoTitle
   
=
   
x
    
.
    !
pt
  ! #
.
  # $
SeoTitle
  $ ,
,
  , -
Stock
ÀÀ 
=
ÀÀ 
x
ÀÀ 
.
ÀÀ 
p
ÀÀ 
.
ÀÀ  
Stock
ÀÀ  %
,
ÀÀ% &
	ViewCount
ÃÃ 
=
ÃÃ 
x
ÃÃ  !
.
ÃÃ! "
p
ÃÃ" #
.
ÃÃ# $
	ViewCount
ÃÃ$ -
,
ÃÃ- .
ThumbnailImage
ÕÕ "
=
ÕÕ# $
x
ÕÕ% &
.
ÕÕ& '
pi
ÕÕ' )
.
ÕÕ) *
	ImagePath
ÕÕ* 3
}
ŒŒ 
)
ŒŒ 
.
ŒŒ 
ToListAsync
ŒŒ 
(
ŒŒ 
)
ŒŒ  
;
ŒŒ  !
return
—— 
data
—— 
;
—— 
}
““ 	
public
‘‘ 
async
‘‘ 
Task
‘‘ 
<
‘‘ 
List
‘‘ 
<
‘‘ 
string
‘‘ %
>
‘‘% &
>
‘‘& '
GetImagePaths
‘‘( 5
(
‘‘5 6
int
‘‘6 9
	productId
‘‘: C
)
‘‘C D
{
’’ 	
var
÷÷ 

imagePaths
÷÷ 
=
÷÷ 
await
÷÷ "
_context
÷÷# +
.
÷÷+ ,
ProductImages
÷÷, 9
.
÷÷9 :
Where
÷÷: ?
(
÷÷? @
x
÷÷@ A
=>
÷÷B D
x
÷÷E F
.
÷÷F G
	ProductId
÷÷G P
==
÷÷Q S
	productId
÷÷T ]
)
÷÷] ^
.
÷÷^ _
Select
÷÷_ e
(
÷÷e f
x
÷÷f g
=>
÷÷h j
x
÷÷k l
.
÷÷l m
	ImagePath
÷÷m v
)
÷÷v w
.
÷÷w x
ToListAsync÷÷x É
(÷÷É Ñ
)÷÷Ñ Ö
;÷÷Ö Ü
return
◊◊ 

imagePaths
◊◊ 
;
◊◊ 
}
ÿÿ 	
}
ŸŸ 
}⁄⁄ ô
eF:\C#\Website\BackEnd\hocDuAnWEB\eShopSolution\eShopSolution.Application\Common\FileStorageService.cs
	namespace 	
eShopSolution
 
. 
Application #
.# $
Common$ *
{		 
public

 

class

 
FileStorageService

 #
:

$ %
IStorageService

& 5
{ 
private 
readonly 
string 
_userContentFolder  2
;2 3
private 
const 
string $
USER_CONTENT_FOLDER_NAME 5
=6 7
$str8 F
;F G
public 
FileStorageService !
(! "
IWebHostEnvironment" 5
webHostEnvironment6 H
)H I
{ 	
_userContentFolder 
=  
Path! %
.% &
Combine& -
(- .
webHostEnvironment. @
.@ A
WebRootPathA L
,L M$
USER_CONTENT_FOLDER_NAMEN f
)f g
;g h
} 	
public 
string 

GetFileUrl  
(  !
string! '
fileName( 0
)0 1
{ 	
return 
$" 
$str 
{ $
USER_CONTENT_FOLDER_NAME /
}/ 0
$str0 1
{1 2
fileName2 :
}: ;
"; <
;< =
} 	
public!! 
async!! 
Task!! 
SaveFileAsync!! '
(!!' (
Stream!!( .
mediaBinaryStream!!/ @
,!!@ A
string!!B H
fileName!!I Q
)!!Q R
{"" 	
var## 
filePath## 
=## 
Path## 
.##  
Combine##  '
(##' (
_userContentFolder##( :
,##: ;
fileName##< D
)##D E
;##E F
using$$ 
var$$ 
output$$ 
=$$ 
new$$ "

FileStream$$# -
($$- .
filePath$$. 6
,$$6 7
FileMode$$8 @
.$$@ A
Create$$A G
)$$G H
;$$H I
await%% 
mediaBinaryStream%% #
.%%# $
CopyToAsync%%$ /
(%%/ 0
output%%0 6
)%%6 7
;%%7 8
}&& 	
public(( 
async(( 
Task(( 
DeleteFileAsync(( )
((() *
string((* 0
fileName((1 9
)((9 :
{)) 	
var** 
filePath** 
=** 
Path** 
.**  
Combine**  '
(**' (
_userContentFolder**( :
,**: ;
fileName**< D
)**D E
;**E F
if++ 
(++ 
File++ 
.++ 
Exists++ 
(++ 
filePath++ $
)++$ %
)++% &
{,, 
await-- 
Task-- 
.-- 
Run-- 
(-- 
(--  
)--  !
=>--" $
File--% )
.--) *
Delete--* 0
(--0 1
filePath--1 9
)--9 :
)--: ;
;--; <
}.. 
}// 	
}00 
}11 Æ
bF:\C#\Website\BackEnd\hocDuAnWEB\eShopSolution\eShopSolution.Application\Common\IStorageService.cs
	namespace 	
eShopSolution
 
. 
Application #
.# $
Common$ *
{ 
public		 

	interface		 
IStorageService		 $
{

 
string 

GetFileUrl 
( 
string  
fileName! )
)) *
;* +
Task 
SaveFileAsync 
( 
Stream !
mediaBinaryStream" 3
,3 4
string5 ;
fileName< D
)D E
;E F
Task 
DeleteFileAsync 
( 
string #
fileName$ ,
), -
;- .
} 
} ˇ
mF:\C#\Website\BackEnd\hocDuAnWEB\eShopSolution\eShopSolution.Application\System\Languages\ILanguageService.cs
	namespace		 	
eShopSolution		
 
.		 
Application		 #
.		# $
System		$ *
.		* +
	Languages		+ 4
{

 
public 

	interface 
ILanguageService %
{ 
Task 
< 
	ApiResult 
< 
List 
< 

LanguageVm &
>& '
>' (
>( )
GetAll* 0
(0 1
)1 2
;2 3
} 
} ⁄
lF:\C#\Website\BackEnd\hocDuAnWEB\eShopSolution\eShopSolution.Application\System\Languages\LanguageService.cs
	namespace

 	
eShopSolution


 
.

 
Application

 #
.

# $
System

$ *
.

* +
	Languages

+ 4
{ 
public 

class 
LanguageService  
:! "
ILanguageService# 3
{ 
private 
readonly 
IConfiguration '
_config( /
;/ 0
private 
readonly 
EShopDbContext '
_context( 0
;0 1
public 
LanguageService 
( 
EShopDbContext -
context. 5
,5 6
IConfiguration 
config !
)! "
{ 	
_config 
= 
config 
; 
_context 
= 
context 
; 
} 	
public 
async 
Task 
< 
	ApiResult #
<# $
List$ (
<( )

LanguageVm) 3
>3 4
>4 5
>5 6
GetAll7 =
(= >
)> ?
{ 	
var 
	languages 
= 
await !
_context" *
.* +
	Languages+ 4
.4 5
Select5 ;
(; <
x< =
=>> @
newA D

LanguageVmE O
(O P
)P Q
{ 
Id 
= 
x 
. 
Id 
, 
Name 
= 
x 
. 
Name 
} 
) 
. 
ToListAsync 
( 
) 
; 
return 
new 
ApiSuccessResult '
<' (
List( ,
<, -

LanguageVm- 7
>7 8
>8 9
(9 :
	languages: C
)C D
;D E
}   	
}!! 
}"" ∂
eF:\C#\Website\BackEnd\hocDuAnWEB\eShopSolution\eShopSolution.Application\System\Roles\IRoleService.cs
	namespace 	
eShopSolution
 
. 
Application #
.# $
System$ *
.* +
Roles+ 0
{ 
public		 

	interface		 
IRoleService		 !
{

 
Task 
< 
List 
< 
RoleVm 
> 
> 
GetAll !
(! "
)" #
;# $
} 
} ∞
dF:\C#\Website\BackEnd\hocDuAnWEB\eShopSolution\eShopSolution.Application\System\Roles\RoleService.cs
	namespace 	
eShopSolution
 
. 
Application #
.# $
System$ *
.* +
Roles+ 0
{ 
public 

class 
RoleService 
: 
IRoleService +
{ 
private 
RoleManager 
< 
AppRole #
># $
_RoleManager% 1
;1 2
public 
RoleService 
( 
RoleManager &
<& '
AppRole' .
>. /
roleManager0 ;
); <
{ 	
_RoleManager 
= 
roleManager &
;& '
} 	
public 
async 
Task 
< 
List 
< 
RoleVm %
>% &
>& '
GetAll( .
(. /
)/ 0
{ 	
var 
roles 
= 
await 
_RoleManager *
.* +
Roles+ 0
.0 1
Select1 7
(7 8
x8 9
=>: <
new= @
RoleVmA G
(G H
)H I
{ 
Id 
= 
x 
. 
Id 
, 
Name 
= 
x 
. 
Name 
, 
Description 
= 
x 
.  
Description  +
,+ ,
} 
) 
. 
ToListAsync 
( 
) 
; 
return   
roles   
;   
}!! 	
}"" 
}## ˛
eF:\C#\Website\BackEnd\hocDuAnWEB\eShopSolution\eShopSolution.Application\System\Users\IUserService.cs
	namespace		 	
eShopSolution		
 
.		 
Application		 #
.		# $
System		$ *
.		* +
Users		+ 0
{

 
public 

	interface 
IUserService !
{ 
Task 
< 
	ApiResult 
< 
string 
> 
> 

Authencate  *
(* +
LoginRequest+ 7
request8 ?
)? @
;@ A
Task 
< 
	ApiResult 
< 
bool 
> 
> 
Update $
($ %
Guid% )
id* ,
,, -
UserUpdateRequest. ?
request@ G
)G H
;H I
Task 
< 
	ApiResult 
< 
bool 
> 
> 
Register &
(& '
RegisterRequest' 6
request7 >
)> ?
;? @
Task 
< 
	ApiResult 
< 
PagedResult "
<" #
UserVm# )
>) *
>* +
>+ ,
GetUserPaging- :
(: ; 
GetUserPagingRequest; O
requestP W
)W X
;X Y
Task 
< 
	ApiResult 
< 
UserVm 
> 
> 
GetById  '
(' (
Guid( ,
id- /
)/ 0
;0 1
Task 
< 
	ApiResult 
< 
bool 
> 
> 
Delete $
($ %
Guid% )
Id* ,
), -
;- .
Task 
< 
	ApiResult 
< 
bool 
> 
> 

RoleAssign (
(( )
Guid) -
Id. 0
,0 1
RoleAssignRequest2 C
requestD K
)K L
;L M
} 
} îº
dF:\C#\Website\BackEnd\hocDuAnWEB\eShopSolution\eShopSolution.Application\System\Users\UserService.cs
	namespace 	
eShopSolution
 
. 
Application #
.# $
System$ *
.* +
Users+ 0
{ 
public 

class 
UserService 
: 
IUserService +
{ 
private 
readonly 
UserManager $
<$ %
AppUser% ,
>, -
_userManager. :
;: ;
private 
readonly 
SignInManager &
<& '
AppUser' .
>. /
_signInManager0 >
;> ?
private 
readonly 
RoleManager $
<$ %
AppRole% ,
>, -
_roleManager. :
;: ;
private 
readonly 
IConfiguration '
_config( /
;/ 0
public 
UserService 
( 
UserManager &
<& '
AppUser' .
>. /
userManager0 ;
,; <
SignInManager= J
<J K
AppUserK R
>R S
signInManagerT a
,a b
RoleManagerc n
<n o
AppRoleo v
>v w
roleManager	x É
,
É Ñ
IConfiguration
Ö ì
config
î ö
)
ö õ
{ 	
_signInManager 
= 
signInManager *
;* +
_userManager 
= 
userManager &
;& '
_roleManager 
= 
roleManager &
;& '
_config   
=   
config   
;   
}!! 	
public## 
async## 
Task## 
<## 
	ApiResult## #
<### $
string##$ *
>##* +
>##+ ,

Authencate##- 7
(##7 8
LoginRequest##8 D
request##E L
)##L M
{$$ 	
var%% 
user%% 
=%% 
await%% 
_userManager%% )
.%%) *
FindByNameAsync%%* 9
(%%9 :
request%%: A
.%%A B
UserName%%B J
)%%J K
;%%K L
if&& 
(&& 
user&& 
==&& 
null&& 
)&& 
return'' 
new'' 
ApiErrorResult'' )
<'') *
string''* 0
>''0 1
(''1 2
$str''2 K
)''K L
;''L M
var)) 
result)) 
=)) 
await)) 
_signInManager)) -
.))- .
PasswordSignInAsync)). A
())A B
user))B F
,))F G
request))H O
.))O P
Password))P X
,))X Y
request))Z a
.))a b

RememberMe))b l
,))l m
true))n r
)))r s
;))s t
if** 
(** 
!** 
result** 
.** 
	Succeeded** !
)**! "
{++ 
return,, 
new,, 
ApiErrorResult,, )
<,,) *
string,,* 0
>,,0 1
(,,1 2
$str,,2 Q
),,Q R
;,,R S
}-- 
var.. 
roles.. 
=.. 
await.. 
_userManager.. *
...* +
GetRolesAsync..+ 8
(..8 9
user..9 =
)..= >
;..> ?
var// 
claims// 
=// 
new// 
[// 
]// 
{00 
new11 
Claim11 
(11 

ClaimTypes11 $
.11$ %
	GivenName11% .
,11. /
user11/ 3
.113 4
	FirstName114 =
)11= >
,11> ?
new22 
Claim22 
(22 

ClaimTypes22 %
.22% &
Email22& +
,22+ ,
user22, 0
.220 1
Email221 6
)226 7
,227 8
new33 
Claim33 
(33 

ClaimTypes33 %
.33% &
Role33& *
,33* +
string33+ 1
.331 2
Join332 6
(336 7
$str337 :
,33: ;
roles33; @
)33@ A
)33A B
,33B C
new44 
Claim44 
(44 

ClaimTypes44 %
.44% &
Name44& *
,44* +
request44+ 2
.442 3
UserName443 ;
)44; <
}55 
;55 
var99 
key99 
=99 
new99  
SymmetricSecurityKey99 .
(99. /
Encoding99/ 7
.997 8
UTF8998 <
.99< =
GetBytes99= E
(99E F
_config99F M
[99M N
$str99N Z
]99Z [
)99[ \
)99\ ]
;99] ^
var:: 
creds:: 
=:: 
new:: 
SigningCredentials:: .
(::. /
key::/ 2
,::2 3
SecurityAlgorithms::4 F
.::F G

HmacSha256::G Q
)::Q R
;::R S
var<< 
token<< 
=<< 
new<< 
JwtSecurityToken<< ,
(<<, -
_config== 
[== 
$str== '
]==' (
,==( )
_config>> 
[>> 
$str>> '
]>>' (
,>>( )
claims?? 
,?? 
expires@@ 
:@@ 
DateTime@@ !
.@@! "
Now@@" %
.@@% &
AddHours@@& .
(@@. /
$num@@/ 0
)@@0 1
,@@1 2
signingCredentialsAA "
:AA" #
credsAA$ )
)AA) *
;AA* +
returnFF 
newFF 
ApiSuccessResultFF '
<FF' (
stringFF( .
>FF. /
(FF/ 0
newFF0 3#
JwtSecurityTokenHandlerFF4 K
(FFK L
)FFL M
.FFM N

WriteTokenFFN X
(FFX Y
tokenFFY ^
)FF^ _
)FF_ `
;FF` a
}GG 	
publicJJ 
asyncJJ 
TaskJJ 
<JJ 
	ApiResultJJ #
<JJ# $
boolJJ$ (
>JJ( )
>JJ) *
DeleteJJ+ 1
(JJ1 2
GuidJJ2 6
IdJJ7 9
)JJ9 :
{KK 	
varLL 
userLL 
=LL 
awaitLL 
_userManagerLL )
.LL) *
FindByIdAsyncLL* 7
(LL7 8
IdLL8 :
.LL: ;
ToStringLL; C
(LLC D
)LLD E
)LLE F
;LLF G
ifMM 
(MM 
userMM 
==MM 
nullMM 
)MM 
{NN 
returnOO 
newOO 
ApiErrorResultOO )
<OO) *
boolOO* .
>OO. /
(OO/ 0
$strOO0 I
)OOI J
;OOJ K
}PP 
varQQ 
resultQQ 
=QQ 
awaitQQ 
_userManagerQQ +
.QQ+ ,
DeleteAsyncQQ, 7
(QQ7 8
userQQ8 <
)QQ< =
;QQ= >
ifRR 
(RR 
resultRR 
.RR 
	SucceededRR  
)RR  !
returnSS 
newSS 
ApiSuccessResultSS +
<SS+ ,
boolSS, 0
>SS0 1
(SS1 2
)SS2 3
;SS3 4
returnUU 
newUU 
ApiErrorResultUU %
<UU% &
boolUU& *
>UU* +
(UU+ ,
$strUU, B
)UUB C
;UUC D
}VV 	
publicXX 
asyncXX 
TaskXX 
<XX 
	ApiResultXX #
<XX# $
UserVmXX$ *
>XX* +
>XX+ ,
GetByIdXX- 4
(XX4 5
GuidXX5 9
idXX: <
)XX< =
{YY 	
varZZ 
userZZ 
=ZZ 
awaitZZ 
_userManagerZZ )
.ZZ) *
FindByIdAsyncZZ* 7
(ZZ7 8
idZZ8 :
.ZZ: ;
ToStringZZ; C
(ZZC D
)ZZD E
)ZZE F
;ZZF G
if[[ 
([[ 
user[[ 
==[[ 
null[[ 
)[[ 
{\\ 
return]] 
new]] 
ApiErrorResult]] )
<]]) *
UserVm]]* 0
>]]0 1
(]]1 2
$str]]2 K
)]]K L
;]]L M
}^^ 
var__ 
roles__ 
=__ 
await__ 
_userManager__ *
.__* +
GetRolesAsync__+ 8
(__8 9
user__9 =
)__= >
;__> ?
var`` 
userVm`` 
=`` 
new`` 
UserVm`` #
(``# $
)``$ %
{aa 
Emailbb 
=bb 
userbb 
.bb 
Emailbb "
,bb" #
PhoneNumbercc 
=cc 
usercc "
.cc" #
PhoneNumbercc# .
,cc. /
	FirstNamedd 
=dd 
userdd  
.dd  !
	FirstNamedd! *
,dd* +
Dobee 
=ee 
useree 
.ee 
DOBee 
,ee 
Idff 
=ff 
userff 
.ff 
Idff 
,ff 
LastNamegg 
=gg 
usergg 
.gg  
LastNamegg  (
,gg( )
UserNamehh 
=hh 
userhh 
.hh  
UserNamehh  (
,hh( )
Rolesii 
=ii 
rolesii 
}jj 
;jj 
returnkk 
newkk 
ApiSuccessResultkk '
<kk' (
UserVmkk( .
>kk. /
(kk/ 0
userVmkk0 6
)kk6 7
;kk7 8
}ll 	
publicoo 
asyncoo 
Taskoo 
<oo 
	ApiResultoo #
<oo# $
PagedResultoo$ /
<oo/ 0
UserVmoo0 6
>oo6 7
>oo7 8
>oo8 9
GetUserPagingoo: G
(ooG H 
GetUserPagingRequestooH \
requestoo] d
)ood e
{pp 	
varqq 
queryqq 
=qq 
_userManagerqq $
.qq$ %
Usersqq% *
;qq* +
ifrr 
(rr 
!rr 
stringrr 
.rr 
IsNullOrEmptyrr %
(rr% &
requestrr& -
.rr- .
KeyWordrr. 5
)rr5 6
)rr6 7
{ss 
queryuu 
=uu 
queryuu 
.uu 
Whereuu #
(uu# $
xuu$ %
=>uu& (
xuu) *
.uu* +
UserNameuu+ 3
.uu3 4
Containsuu4 <
(uu< =
requestuu= D
.uuD E
KeyWorduuE L
)uuL M
||vv 
xvv 
.vv 
PhoneNumbervv  
.vv  !
Containsvv! )
(vv) *
requestvv* 1
.vv1 2
KeyWordvv2 9
)vv9 :
||ww 
xww 
.ww 
Emailww 
.ww 
Containsww #
(ww# $
requestww$ +
.ww+ ,
KeyWordww, 3
)ww3 4
||xx 
xxx 
.xx 
LastNamexx 
.xx 
Containsxx &
(xx& '
requestxx' .
.xx. /
KeyWordxx/ 6
)xx6 7
||yy 
xyy 
.yy 
	FirstNameyy 
.yy 
Containsyy '
(yy' (
requestyy( /
.yy/ 0
KeyWordyy0 7
)yy7 8
)yy8 9
;yy9 :
}zz 
int{{ 
totalRow{{ 
={{ 
await{{  
query{{! &
.{{& '

CountAsync{{' 1
({{1 2
){{2 3
;{{3 4
var|| 
data|| 
=|| 
await|| 
query|| "
.||" #
Skip||# '
(||' (
(||( )
request||) 0
.||0 1
	PageIndex||1 :
-||; <
$num||= >
)||> ?
*||@ A
request||B I
.||I J
PageSize||J R
)||R S
.}} 
Take}} 
(}} 
request}} 
.}} 
PageSize}} &
)}}& '
.~~ 
Select~~ 
(~~ 
x~~ 
=>~~ 
new~~  
UserVm~~! '
(~~' (
)~~( )
{ 
Email
ÄÄ 
=
ÄÄ 
x
ÄÄ 
.
ÄÄ 
Email
ÄÄ #
,
ÄÄ# $
PhoneNumber
ÅÅ 
=
ÅÅ  !
x
ÅÅ" #
.
ÅÅ# $
PhoneNumber
ÅÅ$ /
,
ÅÅ/ 0
UserName
ÇÇ 
=
ÇÇ 
x
ÇÇ  
.
ÇÇ  !
UserName
ÇÇ! )
,
ÇÇ) *
	FirstName
ÉÉ 
=
ÉÉ 
x
ÉÉ  !
.
ÉÉ! "
	FirstName
ÉÉ" +
,
ÉÉ+ ,
Id
ÑÑ 
=
ÑÑ 
x
ÑÑ 
.
ÑÑ 
Id
ÑÑ 
,
ÑÑ 
LastName
ÖÖ 
=
ÖÖ 
x
ÖÖ  
.
ÖÖ  !
LastName
ÖÖ! )
}
ÜÜ 
)
ÜÜ 
.
ÜÜ 
ToListAsync
ÜÜ 
(
ÜÜ 
)
ÜÜ  
;
ÜÜ  !
var
àà 
pagedResult
àà 
=
àà 
new
àà !
PagedResult
àà" -
<
àà- .
UserVm
àà. 4
>
àà4 5
(
àà5 6
)
àà6 7
{
ââ 
TotalRecords
ää 
=
ää 
totalRow
ää '
,
ää' (
	PageIndex
ãã 
=
ãã 
request
ãã #
.
ãã# $
	PageIndex
ãã$ -
,
ãã- .
PageSize
åå 
=
åå 
request
åå "
.
åå" #
PageSize
åå# +
,
åå+ ,
Items
çç 
=
çç 
data
çç 
}
éé 
;
éé 
return
êê 
new
êê 
ApiSuccessResult
êê '
<
êê' (
PagedResult
êê( 3
<
êê3 4
UserVm
êê4 :
>
êê: ;
>
êê; <
(
êê< =
pagedResult
êê= H
)
êêH I
;
êêI J
}
ëë 	
public
îî 
async
îî 
Task
îî 
<
îî 
	ApiResult
îî #
<
îî# $
bool
îî$ (
>
îî( )
>
îî) *
Register
îî+ 3
(
îî3 4
RegisterRequest
îî4 C
request
îîD K
)
îîK L
{
ïï 	
var
ññ 
user
ññ 
=
ññ 
await
ññ 
_userManager
ññ )
.
ññ) *
FindByNameAsync
ññ* 9
(
ññ9 :
request
ññ: A
.
ññA B
UserName
ññB J
)
ññJ K
;
ññK L
if
óó 
(
óó 
user
óó 
!=
óó 
null
óó 
)
óó 
{
òò 
return
ôô 
new
ôô 
ApiErrorResult
ôô )
<
ôô) *
bool
ôô* .
>
ôô. /
(
ôô/ 0
$str
ôô0 F
)
ôôF G
;
ôôG H
}
öö 
if
õõ 
(
õõ 
await
õõ 
_userManager
õõ "
.
õõ" #
FindByEmailAsync
õõ# 3
(
õõ3 4
request
õõ4 ;
.
õõ; <
Email
õõ< A
)
õõA B
!=
õõC E
null
õõF J
)
õõJ K
{
úú 
return
ùù 
new
ùù 
ApiErrorResult
ùù )
<
ùù) *
bool
ùù* .
>
ùù. /
(
ùù/ 0
$str
ùù0 A
)
ùùA B
;
ùùB C
}
ûû 
user
†† 
=
†† 
new
†† 
AppUser
†† 
(
†† 
)
††  
{
°° 
DOB
¢¢ 
=
¢¢ 
request
¢¢ 
.
¢¢ 
DOB
¢¢ !
,
¢¢! "
Email
££ 
=
££ 
request
££ 
.
££  
Email
££  %
,
££% &
	FirstName
§§ 
=
§§ 
request
§§ #
.
§§# $
	FirstName
§§$ -
,
§§- .
LastName
•• 
=
•• 
request
•• "
.
••" #
LastName
••# +
,
••+ ,
UserName
¶¶ 
=
¶¶ 
request
¶¶ "
.
¶¶" #
UserName
¶¶# +
,
¶¶+ ,
PhoneNumber
ßß 
=
ßß 
request
ßß %
.
ßß% &
PhoneNumber
ßß& 1
}
®® 
;
®® 
var
©© 
result
©© 
=
©© 
await
©© 
_userManager
©© +
.
©©+ ,
CreateAsync
©©, 7
(
©©7 8
user
©©8 <
,
©©< =
request
©©> E
.
©©E F
Password
©©F N
)
©©N O
;
©©O P
if
™™ 
(
™™ 
result
™™ 
.
™™ 
	Succeeded
™™  
)
™™  !
{
´´ 
return
¨¨ 
new
¨¨ 
ApiSuccessResult
¨¨ +
<
¨¨+ ,
bool
¨¨, 0
>
¨¨0 1
(
¨¨1 2
)
¨¨2 3
;
¨¨3 4
}
≠≠ 
return
ÆÆ 
new
ÆÆ 
ApiErrorResult
ÆÆ %
<
ÆÆ% &
bool
ÆÆ& *
>
ÆÆ* +
(
ÆÆ+ ,
result
ÆÆ, 2
.
ÆÆ2 3
Errors
ÆÆ3 9
.
ÆÆ9 :
ToList
ÆÆ: @
(
ÆÆ@ A
)
ÆÆA B
)
ÆÆB C
;
ÆÆC D
}
ØØ 	
public
≤≤ 
async
≤≤ 
Task
≤≤ 
<
≤≤ 
	ApiResult
≤≤ #
<
≤≤# $
bool
≤≤$ (
>
≤≤( )
>
≤≤) *

RoleAssign
≤≤+ 5
(
≤≤5 6
Guid
≤≤6 :
Id
≤≤; =
,
≤≤= >
RoleAssignRequest
≤≤? P
request
≤≤Q X
)
≤≤X Y
{
≥≥ 	
var
µµ 
user
µµ 
=
µµ 
await
µµ 
_userManager
µµ )
.
µµ) *
FindByIdAsync
µµ* 7
(
µµ7 8
Id
µµ8 :
.
µµ: ;
ToString
µµ; C
(
µµC D
)
µµD E
)
µµE F
;
µµF G
if
∂∂ 
(
∂∂ 
user
∂∂ 
==
∂∂ 
null
∂∂ 
)
∂∂ 
{
∑∑ 
return
∏∏ 
new
∏∏ 
ApiErrorResult
∏∏ )
<
∏∏) *
bool
∏∏* .
>
∏∏. /
(
∏∏/ 0
$str
∏∏0 I
)
∏∏I J
;
∏∏J K
}
ππ 
var
ºº 
removedRoles
ºº 
=
ºº 
request
ºº &
.
ºº& '
Roles
ºº' ,
.
ºº, -
Where
ºº- 2
(
ºº2 3
x
ºº3 4
=>
ºº5 7
x
ºº8 9
.
ºº9 :
Selected
ºº: B
==
ººC E
false
ººF K
)
ººK L
.
ººL M
Select
ººM S
(
ººS T
x
ººT U
=>
ººV X
x
ººY Z
.
ººZ [
Name
ºº[ _
)
ºº_ `
.
ºº` a
ToList
ººa g
(
ººg h
)
ººh i
;
ººi j
foreach
øø 
(
øø 
var
øø 
roleName
øø !
in
øø" $
removedRoles
øø% 1
)
øø1 2
{
¿¿ 
if
¡¡ 
(
¡¡ 
await
¡¡ 
_userManager
¡¡ &
.
¡¡& '
IsInRoleAsync
¡¡' 4
(
¡¡4 5
user
¡¡5 9
,
¡¡9 :
roleName
¡¡; C
)
¡¡C D
==
¡¡E G
true
¡¡H L
)
¡¡L M
{
¬¬ 
await
√√ 
_userManager
√√ &
.
√√& '!
RemoveFromRoleAsync
√√' :
(
√√: ;
user
√√; ?
,
√√? @
roleName
√√A I
)
√√I J
;
√√J K
}
ƒƒ 
}
≈≈ 
var
»» 

addedRoles
»» 
=
»» 
request
»» $
.
»»$ %
Roles
»»% *
.
»»* +
Where
»»+ 0
(
»»0 1
x
»»1 2
=>
»»3 5
x
»»6 7
.
»»7 8
Selected
»»8 @
==
»»A C
true
»»D H
)
»»H I
.
»»I J
Select
»»J P
(
»»P Q
x
»»Q R
=>
»»S U
x
»»V W
.
»»W X
Name
»»X \
)
»»\ ]
.
»»] ^
ToList
»»^ d
(
»»d e
)
»»e f
;
»»f g
foreach
…… 
(
…… 
var
…… 
roleName
…… !
in
……" $

addedRoles
……% /
)
……/ 0
{
   
if
ÃÃ 
(
ÃÃ 
await
ÃÃ 
_userManager
ÃÃ &
.
ÃÃ& '
IsInRoleAsync
ÃÃ' 4
(
ÃÃ4 5
user
ÃÃ5 9
,
ÃÃ9 :
roleName
ÃÃ; C
)
ÃÃC D
==
ÃÃE G
false
ÃÃH M
)
ÃÃM N
{
ÕÕ 
await
ŒŒ 
_userManager
ŒŒ &
.
ŒŒ& '
AddToRoleAsync
ŒŒ' 5
(
ŒŒ5 6
user
ŒŒ6 :
,
ŒŒ: ;
roleName
ŒŒ< D
)
ŒŒD E
;
ŒŒE F
}
œœ 
}
–– 
return
““ 
new
““ 
ApiSuccessResult
““ '
<
““' (
bool
““( ,
>
““, -
(
““- .
)
““. /
;
““/ 0
}
”” 	
public
’’ 
async
’’ 
Task
’’ 
<
’’ 
	ApiResult
’’ #
<
’’# $
bool
’’$ (
>
’’( )
>
’’) *
Update
’’+ 1
(
’’1 2
Guid
’’2 6
id
’’7 9
,
’’9 :
UserUpdateRequest
’’; L
request
’’M T
)
’’T U
{
÷÷ 	
if
ÿÿ 
(
ÿÿ 
await
ÿÿ 
_userManager
ÿÿ "
.
ÿÿ" #
Users
ÿÿ# (
.
ÿÿ( )
AnyAsync
ÿÿ) 1
(
ÿÿ1 2
x
ÿÿ2 3
=>
ÿÿ4 6
x
ÿÿ7 8
.
ÿÿ8 9
Email
ÿÿ9 >
==
ÿÿ? A
request
ÿÿB I
.
ÿÿI J
Email
ÿÿJ O
&&
ÿÿP R
x
ÿÿS T
.
ÿÿT U
Id
ÿÿU W
!=
ÿÿX Z
id
ÿÿ[ ]
)
ÿÿ] ^
)
ÿÿ^ _
{
ŸŸ 
return
⁄⁄ 
new
⁄⁄ 
ApiErrorResult
⁄⁄ )
<
⁄⁄) *
bool
⁄⁄* .
>
⁄⁄. /
(
⁄⁄/ 0
$str
⁄⁄0 A
)
⁄⁄A B
;
⁄⁄B C
}
€€ 
var
‹‹ 
user
‹‹ 
=
‹‹ 
await
‹‹ 
_userManager
‹‹ )
.
‹‹) *
FindByIdAsync
‹‹* 7
(
‹‹7 8
id
‹‹8 :
.
‹‹: ;
ToString
‹‹; C
(
‹‹C D
)
‹‹D E
)
‹‹E F
;
‹‹F G
user
›› 
.
›› 
DOB
›› 
=
›› 
request
›› 
.
›› 
Dob
›› "
;
››" #
user
ﬁﬁ 
.
ﬁﬁ 
Email
ﬁﬁ 
=
ﬁﬁ 
request
ﬁﬁ  
.
ﬁﬁ  !
Email
ﬁﬁ! &
;
ﬁﬁ& '
user
ﬂﬂ 
.
ﬂﬂ 
	FirstName
ﬂﬂ 
=
ﬂﬂ 
request
ﬂﬂ $
.
ﬂﬂ$ %
	FirstName
ﬂﬂ% .
;
ﬂﬂ. /
user
‡‡ 
.
‡‡ 
LastName
‡‡ 
=
‡‡ 
request
‡‡ #
.
‡‡# $
LastName
‡‡$ ,
;
‡‡, -
user
·· 
.
·· 
PhoneNumber
·· 
=
·· 
request
·· &
.
··& '
PhoneNumber
··' 2
;
··2 3
var
„„ 
result
„„ 
=
„„ 
await
„„ 
_userManager
„„ +
.
„„+ ,
UpdateAsync
„„, 7
(
„„7 8
user
„„8 <
)
„„< =
;
„„= >
if
‰‰ 
(
‰‰ 
result
‰‰ 
.
‰‰ 
	Succeeded
‰‰  
)
‰‰  !
{
ÂÂ 
return
ÊÊ 
new
ÊÊ 
ApiSuccessResult
ÊÊ +
<
ÊÊ+ ,
bool
ÊÊ, 0
>
ÊÊ0 1
(
ÊÊ1 2
)
ÊÊ2 3
;
ÊÊ3 4
}
ÁÁ 
return
ËË 
new
ËË 
ApiErrorResult
ËË %
<
ËË% &
bool
ËË& *
>
ËË* +
(
ËË+ ,
$str
ËË, G
)
ËËG H
;
ËËH I
}
ÈÈ 	
}
ÍÍ 
}ÎÎ ¡
jF:\C#\Website\BackEnd\hocDuAnWEB\eShopSolution\eShopSolution.Application\Utilities\Slides\ISlideService.cs
	namespace 	
eShopSolution
 
. 
Application #
.# $
	Utilities$ -
.- .
Slides. 4
{ 
public		 

	interface		 
ISlideService		 "
{

 
Task 
< 
List 
< 
SlideVm 
> 
> 
GetAll "
(" #
)# $
;$ %
} 
} µ
iF:\C#\Website\BackEnd\hocDuAnWEB\eShopSolution\eShopSolution.Application\Utilities\Slides\SlideService.cs
	namespace 	
eShopSolution
 
. 
Application #
.# $
	Utilities$ -
.- .
Slides. 4
{ 
public 

class 
SlideService 
: 
ISlideService  -
{ 
private 
readonly 
IConfiguration '
_configuration( 6
;6 7
private 
readonly 
EShopDbContext '
_context( 0
;0 1
public 
SlideService 
( 
IConfiguration *
configuration+ 8
,8 9
EShopDbContext: H
contextI P
)P Q
{ 	
_configuration 
= 
configuration *
;* +
_context 
= 
context 
; 
} 	
public 
async 
Task 
< 
List 
< 
SlideVm &
>& '
>' (
GetAll) /
(/ 0
)0 1
{ 	
var 
slids 
= 
await 
_context &
.& '
Slides' -
.- .
OrderBy. 5
(5 6
x6 7
=>8 :
x; <
.< =
	SortOrder= F
)F G
. 
Select 
( 
x 
=> 
new  
SlideVm! (
(( )
)) *
{ 
Id 
= 
x 
. 
Id 
, 
Name 
= 
x 
. 
Name !
,! "
Description   
=    !
x  " #
.  # $
Description  $ /
,  / 0
Url!! 
=!! 
x!! 
.!! 
Url!! 
,!!  
Image"" 
="" 
x"" 
."" 
Image"" #
}## 
)## 
.## 
ToListAsync## 
(## 
)##  
;##  !
return%% 
slids%% 
;%% 
}&& 	
}'' 
}(( 